{"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/IInsightFacade.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":81}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":3},"end":{"line":8,"column":79}},"type":"binary-expr","locations":[{"start":{"line":8,"column":3},"end":{"line":8,"column":21}},{"start":{"line":8,"column":26},"end":{"line":8,"column":78}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":99,"6":99,"7":1,"8":2,"9":2,"10":1,"11":10,"12":10,"13":1},"f":{"0":1,"1":99,"2":2,"3":10},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/IInsightFacade.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,kCAAlB,kBAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1d8116108fa110c4d7b43bcaee5dedd2301fcba9","contentHash":"c76608078feb6ec9ceec2803d9e4c43f8b4e7e20141feea4136203e9aa9e5596"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/InsightFacade.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":24},"end":{"line":7,"column":77}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":75}},"6":{"start":{"line":9,"column":26},"end":{"line":9,"column":71}},"7":{"start":{"line":10,"column":25},"end":{"line":10,"column":69}},"8":{"start":{"line":12,"column":21},"end":{"line":12,"column":51}},"9":{"start":{"line":14,"column":26},"end":{"line":14,"column":57}},"10":{"start":{"line":16,"column":25},"end":{"line":16,"column":66}},"11":{"start":{"line":17,"column":8},"end":{"line":33,"column":9}},"12":{"start":{"line":18,"column":24},"end":{"line":18,"column":74}},"13":{"start":{"line":19,"column":12},"end":{"line":29,"column":13}},"14":{"start":{"line":20,"column":16},"end":{"line":20,"column":54}},"15":{"start":{"line":21,"column":16},"end":{"line":23,"column":17}},"16":{"start":{"line":22,"column":20},"end":{"line":22,"column":67}},"17":{"start":{"line":24,"column":29},"end":{"line":24,"column":70}},"18":{"start":{"line":25,"column":16},"end":{"line":25,"column":47}},"19":{"start":{"line":28,"column":16},"end":{"line":28,"column":93}},"20":{"start":{"line":32,"column":12},"end":{"line":32,"column":84}},"21":{"start":{"line":36,"column":23},"end":{"line":36,"column":79}},"22":{"start":{"line":37,"column":22},"end":{"line":37,"column":27}},"23":{"start":{"line":38,"column":23},"end":{"line":38,"column":57}},"24":{"start":{"line":39,"column":22},"end":{"line":39,"column":65}},"25":{"start":{"line":40,"column":22},"end":{"line":40,"column":24}},"26":{"start":{"line":41,"column":8},"end":{"line":58,"column":9}},"27":{"start":{"line":42,"column":12},"end":{"line":42,"column":47}},"28":{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},"29":{"start":{"line":44,"column":16},"end":{"line":44,"column":73}},"30":{"start":{"line":46,"column":12},"end":{"line":46,"column":51}},"31":{"start":{"line":49,"column":12},"end":{"line":57,"column":13}},"32":{"start":{"line":50,"column":16},"end":{"line":50,"column":24}},"33":{"start":{"line":52,"column":17},"end":{"line":57,"column":13}},"34":{"start":{"line":53,"column":16},"end":{"line":53,"column":24}},"35":{"start":{"line":56,"column":16},"end":{"line":56,"column":84}},"36":{"start":{"line":59,"column":8},"end":{"line":59,"column":40}},"37":{"start":{"line":62,"column":23},"end":{"line":62,"column":68}},"38":{"start":{"line":63,"column":8},"end":{"line":63,"column":39}},"39":{"start":{"line":66,"column":8},"end":{"line":72,"column":9}},"40":{"start":{"line":67,"column":25},"end":{"line":67,"column":68}},"41":{"start":{"line":68,"column":12},"end":{"line":68,"column":43}},"42":{"start":{"line":71,"column":12},"end":{"line":71,"column":95}},"43":{"start":{"line":75,"column":0},"end":{"line":75,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":40},"end":{"line":34,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":30},"end":{"line":60,"column":5}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":25},"end":{"line":64,"column":5}},"line":61},"4":{"name":"(anonymous_4)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":28},"end":{"line":73,"column":5}},"line":65}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":17,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":33,"column":9}},{"start":{"line":17,"column":8},"end":{"line":33,"column":9}}],"line":17},"4":{"loc":{"start":{"line":19,"column":12},"end":{"line":29,"column":13}},"type":"if","locations":[{"start":{"line":19,"column":12},"end":{"line":29,"column":13}},{"start":{"line":19,"column":12},"end":{"line":29,"column":13}}],"line":19},"5":{"loc":{"start":{"line":21,"column":16},"end":{"line":23,"column":17}},"type":"if","locations":[{"start":{"line":21,"column":16},"end":{"line":23,"column":17}},{"start":{"line":21,"column":16},"end":{"line":23,"column":17}}],"line":21},"6":{"loc":{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},{"start":{"line":43,"column":12},"end":{"line":45,"column":13}}],"line":43},"7":{"loc":{"start":{"line":49,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":57,"column":13}},{"start":{"line":49,"column":12},"end":{"line":57,"column":13}}],"line":49},"8":{"loc":{"start":{"line":52,"column":17},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":52,"column":17},"end":{"line":57,"column":13}},{"start":{"line":52,"column":17},"end":{"line":57,"column":13}}],"line":52}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":33,"9":35,"10":35,"11":35,"12":29,"13":29,"14":23,"15":23,"16":23,"17":23,"18":23,"19":6,"20":6,"21":141,"22":141,"23":141,"24":141,"25":141,"26":141,"27":141,"28":91,"29":0,"30":91,"31":68,"32":57,"33":11,"34":10,"35":1,"36":73,"37":15,"38":15,"39":6,"40":6,"41":5,"42":1,"43":1},"f":{"0":4,"1":35,"2":141,"3":15,"4":6},"b":{"0":[1,1,1],"1":[4,0],"2":[4,4],"3":[29,6],"4":[23,6],"5":[23,0],"6":[0,91],"7":[57,11],"8":[10,1]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/InsightFacade.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n\tResultTooLargeError,\n} from \"./IInsightFacade\";\nimport JSZip from \"jszip\";\nimport ValidateQuery from \"../services/validateQuery\";\nimport * as fs from \"fs\";\nimport CollectQuery from \"../services/collectQuery\";\nimport * as fs_extra from \"fs-extra\";\nimport ValidateDataset from \"./validateDataset\";\nimport {DatasetEntry} from \"./DatasetEntry\";\nimport DatasetManager from \"./DatasetManager\";\nimport SectionsDatasetEntry from \"./SectionsDatasetEntry\";\n\nexport default class InsightFacade implements IInsightFacade {\n\tprivate datasetManager: DatasetManager = new DatasetManager();\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\t/*\n\t\t\tThe promise should fulfill on a successful add, reject for any failures.\n\t\t\tThe promise should fulfill with a string array,\n\t\t\tcontaining the ids of all currently added datasets upon a successful add.\n\t\t\tThe promise should reject with an InsightError describing the error.\n\n\t\t\tAn id is invalid if it contains an underscore, or is only whitespace characters.\n\t\t\tIf id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\n\t\t\tAfter receiving the dataset, it should be processed into a data structure of\n\t\t\tyour design. The processed data structure should be persisted to disk; your\n\t\t\tsystem should be able to load this persisted value into memory for answering\n\t\t\tqueries.\n\n\t\t\tUltimately, a dataset must be added or loaded from disk before queries can\n\t\t\tbe successfully answered.\n\t\t */\n\t\tconst validator = new ValidateDataset();\n\t\tlet dataset: DatasetEntry | undefined;\n\t\tlet datasetIds = await this.datasetManager.getDatasetIds();\n\t\tif (validator.validateId(id, datasetIds)) {\n\t\t\tlet valid = await validator.validateContent(id, content, kind);\n\t\t\tif (valid) {\n\t\t\t\tdataset = validator.getValidDataset();\n\t\t\t\tif (dataset) {\n\t\t\t\t\tawait this.datasetManager.saveDataset(dataset);\n\t\t\t\t}\n\t\t\t\tlet result = await this.datasetManager.getDatasetIds();\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t} else {\n\t\t\t\treturn Promise.reject(new InsightError(\"Invalid content.\"));\n\t\t\t}\n\t\t} else {\n\t\t\treturn Promise.reject(new InsightError(\"Invalid id.\"));\n\t\t}\n\t}\n\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\t\tlet datasets: SectionsDatasetEntry[] = await this.datasetManager.loadSectionsDatasetsFromDisk();\n\t\tlet isValid: boolean = false;\n\t\tlet validate = new ValidateQuery(query as typeof Object);\n\t\tlet collect = new CollectQuery(query as typeof Object, datasets);\n\t\tlet results: InsightResult[] = [];\n\t\ttry {\n\t\t\tisValid = validate.validateQuery();\n\n\t\t\tif (!isValid) {\n\t\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t\t}\n\n\t\t\tresults = await collect.CollectQuery();\n\t\t} catch (e) {\n\t\t\tif (e instanceof InsightError) {\n\t\t\t\tthrow e;\n\t\t\t} else if (e instanceof ResultTooLargeError) {\n\t\t\t\tthrow e;\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(String(e instanceof Error));\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\tconst result = await this.datasetManager.readDatasetLedger();\n\t\treturn Promise.resolve(result);\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\ttry {\n\t\t\tlet result = await this.datasetManager.removeDataset(id);\n\t\t\treturn Promise.resolve(result);\n\t\t} catch {\n\t\t\treturn Promise.reject(new NotFoundError(\"RemoveDataset failed.\"));\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b09df2c60f496ce3fa6d8f5ba78aaad2831b87d7","contentHash":"e40df803d4531db9d833903a497f14d1d960463709d83b117b3043df62f4a798"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/validateQuery.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/validateQuery.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":64}},"2":{"start":{"line":6,"column":13},"end":{"line":6,"column":58}},"3":{"start":{"line":7,"column":13},"end":{"line":7,"column":53}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":27}},"5":{"start":{"line":12,"column":22},"end":{"line":12,"column":27}},"6":{"start":{"line":13,"column":25},"end":{"line":13,"column":30}},"7":{"start":{"line":14,"column":22},"end":{"line":14,"column":27}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":39}},"9":{"start":{"line":17,"column":8},"end":{"line":37,"column":9}},"10":{"start":{"line":18,"column":12},"end":{"line":36,"column":13}},"11":{"start":{"line":19,"column":16},"end":{"line":19,"column":31}},"12":{"start":{"line":20,"column":16},"end":{"line":20,"column":61}},"13":{"start":{"line":22,"column":17},"end":{"line":36,"column":13}},"14":{"start":{"line":23,"column":16},"end":{"line":23,"column":34}},"15":{"start":{"line":24,"column":16},"end":{"line":24,"column":64}},"16":{"start":{"line":27,"column":16},"end":{"line":35,"column":17}},"17":{"start":{"line":28,"column":20},"end":{"line":28,"column":79}},"18":{"start":{"line":30,"column":21},"end":{"line":35,"column":17}},"19":{"start":{"line":31,"column":20},"end":{"line":31,"column":81}},"20":{"start":{"line":34,"column":20},"end":{"line":34,"column":77}},"21":{"start":{"line":38,"column":8},"end":{"line":43,"column":9}},"22":{"start":{"line":39,"column":12},"end":{"line":39,"column":71}},"23":{"start":{"line":41,"column":13},"end":{"line":43,"column":9}},"24":{"start":{"line":42,"column":12},"end":{"line":42,"column":73}},"25":{"start":{"line":44,"column":8},"end":{"line":44,"column":23}},"26":{"start":{"line":47,"column":22},"end":{"line":47,"column":27}},"27":{"start":{"line":49,"column":8},"end":{"line":49,"column":33}},"28":{"start":{"line":50,"column":8},"end":{"line":66,"column":9}},"29":{"start":{"line":51,"column":12},"end":{"line":65,"column":13}},"30":{"start":{"line":52,"column":16},"end":{"line":52,"column":56}},"31":{"start":{"line":54,"column":17},"end":{"line":65,"column":13}},"32":{"start":{"line":55,"column":16},"end":{"line":55,"column":60}},"33":{"start":{"line":57,"column":17},"end":{"line":65,"column":13}},"34":{"start":{"line":58,"column":16},"end":{"line":58,"column":56}},"35":{"start":{"line":60,"column":17},"end":{"line":65,"column":13}},"36":{"start":{"line":61,"column":16},"end":{"line":61,"column":59}},"37":{"start":{"line":64,"column":16},"end":{"line":64,"column":73}},"38":{"start":{"line":67,"column":8},"end":{"line":67,"column":23}},"39":{"start":{"line":70,"column":22},"end":{"line":70,"column":27}},"40":{"start":{"line":72,"column":8},"end":{"line":72,"column":34}},"41":{"start":{"line":73,"column":8},"end":{"line":92,"column":9}},"42":{"start":{"line":74,"column":23},"end":{"line":74,"column":37}},"43":{"start":{"line":75,"column":12},"end":{"line":77,"column":13}},"44":{"start":{"line":76,"column":16},"end":{"line":76,"column":73}},"45":{"start":{"line":78,"column":32},"end":{"line":78,"column":62}},"46":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"47":{"start":{"line":80,"column":16},"end":{"line":80,"column":73}},"48":{"start":{"line":82,"column":12},"end":{"line":91,"column":13}},"49":{"start":{"line":83,"column":30},"end":{"line":83,"column":40}},"50":{"start":{"line":84,"column":16},"end":{"line":86,"column":17}},"51":{"start":{"line":85,"column":20},"end":{"line":85,"column":77}},"52":{"start":{"line":87,"column":16},"end":{"line":87,"column":31}},"53":{"start":{"line":90,"column":16},"end":{"line":90,"column":73}},"54":{"start":{"line":93,"column":8},"end":{"line":93,"column":23}},"55":{"start":{"line":96,"column":22},"end":{"line":96,"column":27}},"56":{"start":{"line":98,"column":8},"end":{"line":98,"column":38}},"57":{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},"58":{"start":{"line":100,"column":12},"end":{"line":100,"column":56}},"59":{"start":{"line":102,"column":8},"end":{"line":102,"column":23}},"60":{"start":{"line":105,"column":22},"end":{"line":105,"column":27}},"61":{"start":{"line":107,"column":8},"end":{"line":107,"column":34}},"62":{"start":{"line":108,"column":8},"end":{"line":127,"column":9}},"63":{"start":{"line":109,"column":23},"end":{"line":109,"column":37}},"64":{"start":{"line":110,"column":12},"end":{"line":112,"column":13}},"65":{"start":{"line":111,"column":16},"end":{"line":111,"column":73}},"66":{"start":{"line":113,"column":32},"end":{"line":113,"column":62}},"67":{"start":{"line":114,"column":12},"end":{"line":116,"column":13}},"68":{"start":{"line":115,"column":16},"end":{"line":115,"column":73}},"69":{"start":{"line":117,"column":12},"end":{"line":126,"column":13}},"70":{"start":{"line":118,"column":30},"end":{"line":118,"column":40}},"71":{"start":{"line":119,"column":16},"end":{"line":121,"column":17}},"72":{"start":{"line":120,"column":20},"end":{"line":120,"column":77}},"73":{"start":{"line":122,"column":16},"end":{"line":122,"column":58}},"74":{"start":{"line":125,"column":16},"end":{"line":125,"column":73}},"75":{"start":{"line":128,"column":8},"end":{"line":128,"column":23}},"76":{"start":{"line":131,"column":22},"end":{"line":131,"column":27}},"77":{"start":{"line":133,"column":8},"end":{"line":133,"column":32}},"78":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"79":{"start":{"line":135,"column":12},"end":{"line":135,"column":69}},"80":{"start":{"line":137,"column":8},"end":{"line":137,"column":41}},"81":{"start":{"line":138,"column":8},"end":{"line":138,"column":23}},"82":{"start":{"line":141,"column":22},"end":{"line":141,"column":27}},"83":{"start":{"line":143,"column":8},"end":{"line":143,"column":36}},"84":{"start":{"line":144,"column":22},"end":{"line":144,"column":27}},"85":{"start":{"line":145,"column":8},"end":{"line":156,"column":9}},"86":{"start":{"line":146,"column":12},"end":{"line":155,"column":13}},"87":{"start":{"line":147,"column":16},"end":{"line":147,"column":31}},"88":{"start":{"line":148,"column":16},"end":{"line":148,"column":61}},"89":{"start":{"line":150,"column":17},"end":{"line":155,"column":13}},"90":{"start":{"line":151,"column":16},"end":{"line":151,"column":59}},"91":{"start":{"line":154,"column":16},"end":{"line":154,"column":77}},"92":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"93":{"start":{"line":158,"column":12},"end":{"line":158,"column":79}},"94":{"start":{"line":160,"column":8},"end":{"line":160,"column":23}},"95":{"start":{"line":163,"column":22},"end":{"line":163,"column":27}},"96":{"start":{"line":164,"column":8},"end":{"line":170,"column":9}},"97":{"start":{"line":165,"column":22},"end":{"line":165,"column":36}},"98":{"start":{"line":166,"column":28},"end":{"line":166,"column":57}},"99":{"start":{"line":167,"column":12},"end":{"line":169,"column":13}},"100":{"start":{"line":168,"column":16},"end":{"line":168,"column":73}},"101":{"start":{"line":171,"column":8},"end":{"line":171,"column":23}},"102":{"start":{"line":172,"column":8},"end":{"line":172,"column":23}},"103":{"start":{"line":175,"column":22},"end":{"line":175,"column":27}},"104":{"start":{"line":176,"column":18},"end":{"line":176,"column":34}},"105":{"start":{"line":177,"column":24},"end":{"line":177,"column":53}},"106":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"107":{"start":{"line":179,"column":12},"end":{"line":179,"column":69}},"108":{"start":{"line":181,"column":8},"end":{"line":181,"column":23}},"109":{"start":{"line":182,"column":8},"end":{"line":182,"column":23}},"110":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"111":{"start":{"line":186,"column":12},"end":{"line":186,"column":73}},"112":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"113":{"start":{"line":189,"column":12},"end":{"line":189,"column":73}},"114":{"start":{"line":191,"column":8},"end":{"line":191,"column":20}},"115":{"start":{"line":194,"column":22},"end":{"line":194,"column":39}},"116":{"start":{"line":195,"column":8},"end":{"line":197,"column":9}},"117":{"start":{"line":196,"column":12},"end":{"line":196,"column":76}},"118":{"start":{"line":198,"column":8},"end":{"line":198,"column":20}},"119":{"start":{"line":201,"column":8},"end":{"line":201,"column":18}},"120":{"start":{"line":204,"column":0},"end":{"line":204,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":23},"end":{"line":10,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":20},"end":{"line":45,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":23},"end":{"line":68,"column":5}},"line":46},"3":{"name":"(anonymous_3)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":25},"end":{"line":94,"column":5}},"line":69},"4":{"name":"(anonymous_4)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":33},"end":{"line":103,"column":5}},"line":95},"5":{"name":"(anonymous_5)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":25},"end":{"line":129,"column":5}},"line":104},"6":{"name":"(anonymous_6)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":26},"end":{"line":139,"column":5}},"line":130},"7":{"name":"(anonymous_7)","decl":{"start":{"line":140,"column":4},"end":{"line":140,"column":5}},"loc":{"start":{"line":140,"column":29},"end":{"line":161,"column":5}},"line":140},"8":{"name":"(anonymous_8)","decl":{"start":{"line":162,"column":4},"end":{"line":162,"column":5}},"loc":{"start":{"line":162,"column":26},"end":{"line":173,"column":5}},"line":162},"9":{"name":"(anonymous_9)","decl":{"start":{"line":174,"column":4},"end":{"line":174,"column":5}},"loc":{"start":{"line":174,"column":25},"end":{"line":183,"column":5}},"line":174},"10":{"name":"(anonymous_10)","decl":{"start":{"line":184,"column":4},"end":{"line":184,"column":5}},"loc":{"start":{"line":184,"column":31},"end":{"line":192,"column":5}},"line":184},"11":{"name":"(anonymous_11)","decl":{"start":{"line":193,"column":4},"end":{"line":193,"column":5}},"loc":{"start":{"line":193,"column":37},"end":{"line":199,"column":5}},"line":193},"12":{"name":"(anonymous_12)","decl":{"start":{"line":200,"column":4},"end":{"line":200,"column":5}},"loc":{"start":{"line":200,"column":14},"end":{"line":202,"column":5}},"line":200}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":12},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":36,"column":13}},{"start":{"line":18,"column":12},"end":{"line":36,"column":13}}],"line":18},"1":{"loc":{"start":{"line":22,"column":17},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":22,"column":17},"end":{"line":36,"column":13}},{"start":{"line":22,"column":17},"end":{"line":36,"column":13}}],"line":22},"2":{"loc":{"start":{"line":27,"column":16},"end":{"line":35,"column":17}},"type":"if","locations":[{"start":{"line":27,"column":16},"end":{"line":35,"column":17}},{"start":{"line":27,"column":16},"end":{"line":35,"column":17}}],"line":27},"3":{"loc":{"start":{"line":30,"column":21},"end":{"line":35,"column":17}},"type":"if","locations":[{"start":{"line":30,"column":21},"end":{"line":35,"column":17}},{"start":{"line":30,"column":21},"end":{"line":35,"column":17}}],"line":30},"4":{"loc":{"start":{"line":38,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":43,"column":9}},{"start":{"line":38,"column":8},"end":{"line":43,"column":9}}],"line":38},"5":{"loc":{"start":{"line":41,"column":13},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":13},"end":{"line":43,"column":9}},{"start":{"line":41,"column":13},"end":{"line":43,"column":9}}],"line":41},"6":{"loc":{"start":{"line":51,"column":12},"end":{"line":65,"column":13}},"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":65,"column":13}},{"start":{"line":51,"column":12},"end":{"line":65,"column":13}}],"line":51},"7":{"loc":{"start":{"line":51,"column":16},"end":{"line":51,"column":60}},"type":"binary-expr","locations":[{"start":{"line":51,"column":16},"end":{"line":51,"column":28}},{"start":{"line":51,"column":32},"end":{"line":51,"column":44}},{"start":{"line":51,"column":48},"end":{"line":51,"column":60}}],"line":51},"8":{"loc":{"start":{"line":54,"column":17},"end":{"line":65,"column":13}},"type":"if","locations":[{"start":{"line":54,"column":17},"end":{"line":65,"column":13}},{"start":{"line":54,"column":17},"end":{"line":65,"column":13}}],"line":54},"9":{"loc":{"start":{"line":54,"column":21},"end":{"line":54,"column":50}},"type":"binary-expr","locations":[{"start":{"line":54,"column":21},"end":{"line":54,"column":34}},{"start":{"line":54,"column":38},"end":{"line":54,"column":50}}],"line":54},"10":{"loc":{"start":{"line":57,"column":17},"end":{"line":65,"column":13}},"type":"if","locations":[{"start":{"line":57,"column":17},"end":{"line":65,"column":13}},{"start":{"line":57,"column":17},"end":{"line":65,"column":13}}],"line":57},"11":{"loc":{"start":{"line":60,"column":17},"end":{"line":65,"column":13}},"type":"if","locations":[{"start":{"line":60,"column":17},"end":{"line":65,"column":13}},{"start":{"line":60,"column":17},"end":{"line":65,"column":13}}],"line":60},"12":{"loc":{"start":{"line":75,"column":12},"end":{"line":77,"column":13}},"type":"if","locations":[{"start":{"line":75,"column":12},"end":{"line":77,"column":13}},{"start":{"line":75,"column":12},"end":{"line":77,"column":13}}],"line":75},"13":{"loc":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},{"start":{"line":79,"column":12},"end":{"line":81,"column":13}}],"line":79},"14":{"loc":{"start":{"line":79,"column":16},"end":{"line":79,"column":64}},"type":"binary-expr","locations":[{"start":{"line":79,"column":16},"end":{"line":79,"column":30}},{"start":{"line":79,"column":34},"end":{"line":79,"column":64}}],"line":79},"15":{"loc":{"start":{"line":84,"column":16},"end":{"line":86,"column":17}},"type":"if","locations":[{"start":{"line":84,"column":16},"end":{"line":86,"column":17}},{"start":{"line":84,"column":16},"end":{"line":86,"column":17}}],"line":84},"16":{"loc":{"start":{"line":110,"column":12},"end":{"line":112,"column":13}},"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":112,"column":13}},{"start":{"line":110,"column":12},"end":{"line":112,"column":13}}],"line":110},"17":{"loc":{"start":{"line":114,"column":12},"end":{"line":116,"column":13}},"type":"if","locations":[{"start":{"line":114,"column":12},"end":{"line":116,"column":13}},{"start":{"line":114,"column":12},"end":{"line":116,"column":13}}],"line":114},"18":{"loc":{"start":{"line":114,"column":16},"end":{"line":114,"column":64}},"type":"binary-expr","locations":[{"start":{"line":114,"column":16},"end":{"line":114,"column":30}},{"start":{"line":114,"column":34},"end":{"line":114,"column":64}}],"line":114},"19":{"loc":{"start":{"line":119,"column":16},"end":{"line":121,"column":17}},"type":"if","locations":[{"start":{"line":119,"column":16},"end":{"line":121,"column":17}},{"start":{"line":119,"column":16},"end":{"line":121,"column":17}}],"line":119},"20":{"loc":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},{"start":{"line":134,"column":8},"end":{"line":136,"column":9}}],"line":134},"21":{"loc":{"start":{"line":146,"column":12},"end":{"line":155,"column":13}},"type":"if","locations":[{"start":{"line":146,"column":12},"end":{"line":155,"column":13}},{"start":{"line":146,"column":12},"end":{"line":155,"column":13}}],"line":146},"22":{"loc":{"start":{"line":150,"column":17},"end":{"line":155,"column":13}},"type":"if","locations":[{"start":{"line":150,"column":17},"end":{"line":155,"column":13}},{"start":{"line":150,"column":17},"end":{"line":155,"column":13}}],"line":150},"23":{"loc":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},{"start":{"line":157,"column":8},"end":{"line":159,"column":9}}],"line":157},"24":{"loc":{"start":{"line":167,"column":12},"end":{"line":169,"column":13}},"type":"if","locations":[{"start":{"line":167,"column":12},"end":{"line":169,"column":13}},{"start":{"line":167,"column":12},"end":{"line":169,"column":13}}],"line":167},"25":{"loc":{"start":{"line":167,"column":16},"end":{"line":167,"column":94}},"type":"binary-expr","locations":[{"start":{"line":167,"column":16},"end":{"line":167,"column":26}},{"start":{"line":167,"column":31},"end":{"line":167,"column":60}},{"start":{"line":167,"column":64},"end":{"line":167,"column":93}}],"line":167},"26":{"loc":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},{"start":{"line":178,"column":8},"end":{"line":180,"column":9}}],"line":178},"27":{"loc":{"start":{"line":178,"column":12},"end":{"line":178,"column":90}},"type":"binary-expr","locations":[{"start":{"line":178,"column":12},"end":{"line":178,"column":22}},{"start":{"line":178,"column":27},"end":{"line":178,"column":56}},{"start":{"line":178,"column":60},"end":{"line":178,"column":89}}],"line":178},"28":{"loc":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},{"start":{"line":185,"column":8},"end":{"line":187,"column":9}}],"line":185},"29":{"loc":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"type":"if","locations":[{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},{"start":{"line":188,"column":8},"end":{"line":190,"column":9}}],"line":188},"30":{"loc":{"start":{"line":195,"column":8},"end":{"line":197,"column":9}},"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":197,"column":9}},{"start":{"line":195,"column":8},"end":{"line":197,"column":9}}],"line":195}},"s":{"0":1,"1":1,"2":141,"3":141,"4":141,"5":141,"6":141,"7":141,"8":141,"9":141,"10":233,"11":138,"12":138,"13":95,"14":94,"15":94,"16":1,"17":1,"18":0,"19":0,"20":0,"21":92,"22":1,"23":91,"24":0,"25":91,"26":280,"27":280,"28":280,"29":279,"30":111,"31":168,"32":47,"33":121,"34":95,"35":26,"36":23,"37":3,"38":224,"39":111,"40":111,"41":111,"42":111,"43":111,"44":6,"45":105,"46":104,"47":7,"48":97,"49":97,"50":97,"51":5,"52":92,"53":5,"54":92,"55":47,"56":47,"57":47,"58":121,"59":39,"60":95,"61":95,"62":95,"63":95,"64":95,"65":4,"66":91,"67":91,"68":4,"69":87,"70":87,"71":87,"72":5,"73":82,"74":14,"75":73,"76":23,"77":23,"78":23,"79":2,"80":21,"81":19,"82":94,"83":94,"84":94,"85":94,"86":183,"87":93,"88":93,"89":90,"90":90,"91":0,"92":93,"93":1,"94":92,"95":93,"96":93,"97":352,"98":352,"99":352,"100":0,"101":93,"102":93,"103":90,"104":90,"105":89,"106":89,"107":0,"108":89,"109":89,"110":637,"111":1,"112":636,"113":0,"114":636,"115":82,"116":82,"117":9,"118":73,"119":0,"120":1},"f":{"0":141,"1":141,"2":280,"3":111,"4":47,"5":95,"6":23,"7":94,"8":93,"9":90,"10":637,"11":82,"12":0},"b":{"0":[138,95],"1":[94,1],"2":[1,0],"3":[0,0],"4":[1,91],"5":[0,91],"6":[111,168],"7":[279,203,182],"8":[47,121],"9":[168,139],"10":[95,26],"11":[23,3],"12":[6,105],"13":[7,97],"14":[104,104],"15":[5,92],"16":[4,91],"17":[4,87],"18":[91,91],"19":[5,82],"20":[2,21],"21":[93,90],"22":[90,0],"23":[1,92],"24":[0,352],"25":[352,352,202],"26":[0,89],"27":[89,89,3],"28":[1,636],"29":[0,636],"30":[9,73]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/validateQuery.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/validateQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import InsightFacade from \"../controller/InsightFacade\";\nimport {InsightError} from \"../controller/IInsightFacade\";\n\nexport default class ValidateQuery {\n\tprivate query: object;\n\tprivate sfield = [\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\n\tprivate mfield = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\n\n\tconstructor(query: object) {\n\t\tthis.query = query;\n\t}\n\n\tpublic validateQuery(): boolean {\n\t\tlet hasBody: boolean = false;\n\t\tlet hasOptions: boolean = false;\n\t\tlet isValid = false;\n\t\tlet keys: string[];\n\n\t\tkeys = Object.keys(this.query);\n\n\t\tfor (let key of keys) {\n\t\t\tif (key === \"WHERE\") {\n\t\t\t\thasBody = true;\n\t\t\t\tisValid = this.validateBody(this.query[key as keyof typeof this.query]);\n\t\t\t} else if (key === \"OPTIONS\") {\n\t\t\t\thasOptions = true;\n\t\t\t\tisValid = this.validateOptions(this.query[key as keyof typeof this.query]);\n\t\t\t} else {\n\t\t\t\tif (!hasBody) {\n\t\t\t\t\tthrow new InsightError(\"WHERE not found\");\n\t\t\t\t} else if (!hasOptions) {\n\t\t\t\t\tthrow new InsightError(\"OPTIONS not found\");\n\t\t\t\t} else {\n\t\t\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!hasBody) {\n\t\t\tthrow new InsightError(\"WHERE not found\");\n\t\t} else if (!hasOptions) {\n\t\t\tthrow new InsightError(\"OPTIONS not found\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tprivate validateBody(body: object): boolean {\n\t\tlet isValid = false;\n\t\tlet keys: string[];\n\t\tkeys = Object.keys(body);\n\t\t// console.log(\"Body\", keys);\n\n\t\tfor (let key of keys) {\n\t\t\tif (key === \"GT\" || key === \"LT\" || key === \"EQ\") { // MCOMP\n\t\t\t\tisValid = this.validateMCOMP(body[key as keyof typeof body]);\n\t\t\t} else if (key === \"AND\" || key === \"OR\") { // LOGICCOMP\n\t\t\t\tisValid = this.validateLOGICCOMP(body[key as keyof typeof body]);\n\t\t\t} else if (key === \"IS\") { // SCOMP\n\t\t\t\tisValid = this.validateSCOMP(body[key as keyof typeof body]);\n\t\t\t} else if (key === \"NOT\") { // NEGATION\n\t\t\t\tisValid = this.validateNEGATION(body[key as keyof typeof body]);\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t\t}\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tprivate validateMCOMP(mcomp: object): boolean {\n\t\tlet isValid = false;\n\t\tlet keys: string[];\n\t\tkeys = Object.keys(mcomp);\n\t\t// console.log(\"MCOMP\", keys);\n\n\n\t\tfor (let key of keys) {\n\t\t\tlet mkey = key.split(\"_\");\n\n\t\t\tif (mkey.length !== 2) {\n\t\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t\t}\n\t\t\tlet isValidString = this.validateIdString(mkey[0]);\n\t\t\tif (!isValidString || !this.mfield.includes(mkey[1])) {\n\t\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst value: number = mcomp[key as keyof typeof mcomp]; // fail if numeric string or array or empty\n\t\t\t\tif (typeof mcomp[key as keyof typeof mcomp] !== \"number\") {\n\t\t\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t\t\t}\n\t\t\t\t// console.log(\"MCOMP val\", value);\n\t\t\t\tisValid = true;\n\t\t\t} catch (e) {\n\t\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t\t}\n\t\t}\n\t\treturn isValid;\n\t}\n\n\tprivate validateLOGICCOMP(logiccomp: object): boolean {\n\t\tlet isValid = false;\n\t\tlet keys: string[];\n\t\tkeys = Object.keys(logiccomp);\n\t\t// console.log(\"Logic Comp\", keys);\n\t\tfor (let key of keys) {\n\t\t\tisValid = this.validateBody(logiccomp[key as keyof typeof logiccomp]);\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tprivate validateSCOMP(scomp: object): boolean {\n\t\tlet isValid = false;\n\t\tlet keys: string[];\n\t\tkeys = Object.keys(scomp);\n\t\t// console.log(\"SCOMP\", keys);\n\n\t\tfor (let key of keys) {\n\t\t\tlet skey = key.split(\"_\");\n\t\t\tif (skey.length !== 2) {\n\t\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t\t}\n\t\t\tlet isValidString = this.validateIdString(skey[0]);\n\t\t\tif (!isValidString || !this.sfield.includes(skey[1])) {\n\t\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst value: string = scomp[key as keyof typeof scomp]; // fail if array or empty\n\t\t\t\tif (typeof scomp[key as keyof typeof scomp] !== \"string\") {\n\t\t\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t\t\t}\n\t\t\t\tisValid = this.validateInputString(value);\n\t\t\t\t// console.log(\"scomp val\", value);\n\t\t\t} catch (e) {\n\t\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t\t}\n\t\t}\n\t\treturn isValid;\n\t}\n\n\tprivate validateNEGATION(neg: object): boolean  {\n\t\tlet isValid = false;\n\t\tlet keys: string[];\n\t\tkeys = Object.keys(neg);\n\t\t// console.log(\"Negation\", keys);\n\n\t\tif (keys.length > 1) {\n\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t}\n\t\tisValid = this.validateBody(neg);\n\n\t\treturn isValid;\n\t}\n\n\tprivate validateOptions(options: object): boolean  {\n\t\tlet isValid: boolean = false;\n\t\tlet keys: string[];\n\t\tkeys = Object.keys(options);\n\t\tlet hasCols: boolean = false;\n\t\t// console.log(keys);\n\t\tfor (let key of keys) {\n\t\t\tif (key === \"COLUMNS\") {\n\t\t\t\thasCols = true;\n\t\t\t\tisValid = this.validateColumns(options[key as keyof typeof options]);\n\t\t\t} else if (key === \"ORDER\") {\n\t\t\t\tisValid = this.validateOrder(options[key as keyof typeof options]);\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"Incorrect Options\");\n\t\t\t}\n\t\t}\n\n\t\tif (!hasCols) {\n\t\t\tthrow new InsightError(\"Options missing columns\");\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tprivate validateColumns(cols: string[]): boolean {\n\t\tlet isValid = false;\n\t\tfor (let col of cols) {\n\t\t\tlet val = col.split(\"_\");\n\t\t\tlet isValidId = this.validateIdString(val[0]);\n\n\t\t\tif (!isValidId || (!this.mfield.includes(val[1]) && !this.sfield.includes(val[1]))) {\n\t\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t\t}\n\t\t}\n\n\t\tisValid = true;\n\t\treturn isValid;\n\t}\n\n\tprivate validateOrder(order: string) {\n\t\tlet isValid = false;\n\t\tlet val = order.split(\"_\");\n\t\tlet isValidId = this.validateIdString(val[0]);\n\n\t\tif (!isValidId || (!this.mfield.includes(val[1]) && !this.sfield.includes(val[1]))) {\n\t\t\tthrow new InsightError(\"Invalid Query\");\n\t\t}\n\t\tisValid = true;\n\t\treturn isValid;\n\t}\n\n\tprivate validateIdString(idString: string): boolean {\n\t\t// const regEx = /[a-zA-Z0-9[\\]^]+/;\n\t\tif (idString.length === 0 ) {\n\t\t\tthrow new InsightError(\"Invalid id string\");\n\t\t}\n\t\tif (idString.includes(\"_\")) {\n\t\t\tthrow new InsightError(\"Invalid id string\");\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate validateInputString(inputString: string): boolean  { // implement\n\t\t// const regEx = /^ *$|^([* A-Za-z0-9[^\\]][ A-Za-z0-9[^\\]]*[* A-Za-z0-9[^\\]]|[* A-Za-z0-9[^\\]])$/;\n\t\tconst regEx = /^[*]?[^*]*[*]?$/;\n\t\tif (!regEx.test(inputString)) {\n\t\t\tthrow new InsightError(\"Invalid input string\");\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getCols(): string[] {\n\t\treturn [];\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"39ca9d78f39d858409c581ab25f76982683d68b8","contentHash":"a6a27789f8c03285fb0855204b9d94a53b42b1b05596907dc3d22807329eb72b"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectQuery.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectQuery.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":64}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":65}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":65}},"6":{"start":{"line":9,"column":27},"end":{"line":9,"column":73}},"7":{"start":{"line":10,"column":28},"end":{"line":10,"column":58}},"8":{"start":{"line":11,"column":21},"end":{"line":11,"column":61}},"9":{"start":{"line":12,"column":25},"end":{"line":12,"column":69}},"10":{"start":{"line":15,"column":21},"end":{"line":15,"column":23}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":27}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":45}},"13":{"start":{"line":21,"column":20},"end":{"line":21,"column":22}},"14":{"start":{"line":22,"column":25},"end":{"line":22,"column":67}},"15":{"start":{"line":23,"column":16},"end":{"line":23,"column":53}},"16":{"start":{"line":24,"column":22},"end":{"line":24,"column":43}},"17":{"start":{"line":25,"column":23},"end":{"line":25,"column":39}},"18":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"19":{"start":{"line":27,"column":12},"end":{"line":27,"column":120}},"20":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"21":{"start":{"line":30,"column":12},"end":{"line":30,"column":42}},"22":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"23":{"start":{"line":33,"column":12},"end":{"line":33,"column":87}},"24":{"start":{"line":35,"column":8},"end":{"line":35,"column":21}},"25":{"start":{"line":38,"column":23},"end":{"line":38,"column":45}},"26":{"start":{"line":40,"column":12},"end":{"line":69,"column":13}},"27":{"start":{"line":41,"column":16},"end":{"line":41,"column":96}},"28":{"start":{"line":43,"column":17},"end":{"line":69,"column":13}},"29":{"start":{"line":44,"column":16},"end":{"line":44,"column":98}},"30":{"start":{"line":46,"column":17},"end":{"line":69,"column":13}},"31":{"start":{"line":47,"column":16},"end":{"line":47,"column":98}},"32":{"start":{"line":49,"column":17},"end":{"line":69,"column":13}},"33":{"start":{"line":50,"column":16},"end":{"line":50,"column":100}},"34":{"start":{"line":52,"column":17},"end":{"line":69,"column":13}},"35":{"start":{"line":53,"column":16},"end":{"line":53,"column":98}},"36":{"start":{"line":55,"column":17},"end":{"line":69,"column":13}},"37":{"start":{"line":56,"column":16},"end":{"line":56,"column":98}},"38":{"start":{"line":58,"column":17},"end":{"line":69,"column":13}},"39":{"start":{"line":59,"column":16},"end":{"line":59,"column":94}},"40":{"start":{"line":61,"column":17},"end":{"line":69,"column":13}},"41":{"start":{"line":62,"column":16},"end":{"line":62,"column":110}},"42":{"start":{"line":64,"column":17},"end":{"line":69,"column":13}},"43":{"start":{"line":65,"column":16},"end":{"line":65,"column":100}},"44":{"start":{"line":67,"column":17},"end":{"line":69,"column":13}},"45":{"start":{"line":68,"column":16},"end":{"line":68,"column":98}},"46":{"start":{"line":70,"column":12},"end":{"line":70,"column":21}},"47":{"start":{"line":72,"column":8},"end":{"line":72,"column":43}},"48":{"start":{"line":76,"column":8},"end":{"line":76,"column":33}},"49":{"start":{"line":77,"column":30},"end":{"line":77,"column":32}},"50":{"start":{"line":78,"column":23},"end":{"line":78,"column":70}},"51":{"start":{"line":79,"column":23},"end":{"line":79,"column":70}},"52":{"start":{"line":80,"column":27},"end":{"line":80,"column":78}},"53":{"start":{"line":81,"column":22},"end":{"line":81,"column":67}},"54":{"start":{"line":82,"column":25},"end":{"line":82,"column":74}},"55":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"56":{"start":{"line":84,"column":12},"end":{"line":84,"column":58}},"57":{"start":{"line":86,"column":8},"end":{"line":102,"column":9}},"58":{"start":{"line":87,"column":12},"end":{"line":101,"column":13}},"59":{"start":{"line":88,"column":16},"end":{"line":88,"column":72}},"60":{"start":{"line":90,"column":17},"end":{"line":101,"column":13}},"61":{"start":{"line":91,"column":16},"end":{"line":91,"column":80}},"62":{"start":{"line":93,"column":17},"end":{"line":101,"column":13}},"63":{"start":{"line":94,"column":16},"end":{"line":94,"column":67}},"64":{"start":{"line":96,"column":17},"end":{"line":101,"column":13}},"65":{"start":{"line":97,"column":16},"end":{"line":97,"column":71}},"66":{"start":{"line":100,"column":16},"end":{"line":100,"column":90}},"67":{"start":{"line":103,"column":8},"end":{"line":103,"column":31}},"68":{"start":{"line":106,"column":25},"end":{"line":106,"column":34}},"69":{"start":{"line":107,"column":19},"end":{"line":107,"column":37}},"70":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"71":{"start":{"line":109,"column":12},"end":{"line":109,"column":32}},"72":{"start":{"line":111,"column":8},"end":{"line":111,"column":26}},"73":{"start":{"line":114,"column":0},"end":{"line":114,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":39},"end":{"line":19,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":25},"end":{"line":36,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":32},"end":{"line":73,"column":5}},"line":37},"4":{"name":"orderCompare","decl":{"start":{"line":39,"column":17},"end":{"line":39,"column":29}},"loc":{"start":{"line":39,"column":50},"end":{"line":71,"column":9}},"line":39},"5":{"name":"(anonymous_5)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":22},"end":{"line":104,"column":5}},"line":74},"6":{"name":"(anonymous_6)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":28},"end":{"line":112,"column":5}},"line":105}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"4":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"5":{"loc":{"start":{"line":40,"column":12},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":69,"column":13}},{"start":{"line":40,"column":12},"end":{"line":69,"column":13}}],"line":40},"6":{"loc":{"start":{"line":43,"column":17},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":17},"end":{"line":69,"column":13}},{"start":{"line":43,"column":17},"end":{"line":69,"column":13}}],"line":43},"7":{"loc":{"start":{"line":46,"column":17},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":17},"end":{"line":69,"column":13}},{"start":{"line":46,"column":17},"end":{"line":69,"column":13}}],"line":46},"8":{"loc":{"start":{"line":49,"column":17},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":49,"column":17},"end":{"line":69,"column":13}},{"start":{"line":49,"column":17},"end":{"line":69,"column":13}}],"line":49},"9":{"loc":{"start":{"line":52,"column":17},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":52,"column":17},"end":{"line":69,"column":13}},{"start":{"line":52,"column":17},"end":{"line":69,"column":13}}],"line":52},"10":{"loc":{"start":{"line":55,"column":17},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":55,"column":17},"end":{"line":69,"column":13}},{"start":{"line":55,"column":17},"end":{"line":69,"column":13}}],"line":55},"11":{"loc":{"start":{"line":58,"column":17},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":17},"end":{"line":69,"column":13}},{"start":{"line":58,"column":17},"end":{"line":69,"column":13}}],"line":58},"12":{"loc":{"start":{"line":61,"column":17},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":17},"end":{"line":69,"column":13}},{"start":{"line":61,"column":17},"end":{"line":69,"column":13}}],"line":61},"13":{"loc":{"start":{"line":64,"column":17},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":64,"column":17},"end":{"line":69,"column":13}},{"start":{"line":64,"column":17},"end":{"line":69,"column":13}}],"line":64},"14":{"loc":{"start":{"line":67,"column":17},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":67,"column":17},"end":{"line":69,"column":13}},{"start":{"line":67,"column":17},"end":{"line":69,"column":13}}],"line":67},"15":{"loc":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},{"start":{"line":83,"column":8},"end":{"line":85,"column":9}}],"line":83},"16":{"loc":{"start":{"line":87,"column":12},"end":{"line":101,"column":13}},"type":"if","locations":[{"start":{"line":87,"column":12},"end":{"line":101,"column":13}},{"start":{"line":87,"column":12},"end":{"line":101,"column":13}}],"line":87},"17":{"loc":{"start":{"line":87,"column":16},"end":{"line":87,"column":60}},"type":"binary-expr","locations":[{"start":{"line":87,"column":16},"end":{"line":87,"column":28}},{"start":{"line":87,"column":32},"end":{"line":87,"column":44}},{"start":{"line":87,"column":48},"end":{"line":87,"column":60}}],"line":87},"18":{"loc":{"start":{"line":90,"column":17},"end":{"line":101,"column":13}},"type":"if","locations":[{"start":{"line":90,"column":17},"end":{"line":101,"column":13}},{"start":{"line":90,"column":17},"end":{"line":101,"column":13}}],"line":90},"19":{"loc":{"start":{"line":90,"column":21},"end":{"line":90,"column":50}},"type":"binary-expr","locations":[{"start":{"line":90,"column":21},"end":{"line":90,"column":34}},{"start":{"line":90,"column":38},"end":{"line":90,"column":50}}],"line":90},"20":{"loc":{"start":{"line":93,"column":17},"end":{"line":101,"column":13}},"type":"if","locations":[{"start":{"line":93,"column":17},"end":{"line":101,"column":13}},{"start":{"line":93,"column":17},"end":{"line":101,"column":13}}],"line":93},"21":{"loc":{"start":{"line":96,"column":17},"end":{"line":101,"column":13}},"type":"if","locations":[{"start":{"line":96,"column":17},"end":{"line":101,"column":13}},{"start":{"line":96,"column":17},"end":{"line":101,"column":13}}],"line":96}},"s":{"0":1,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":264,"11":264,"12":264,"13":91,"14":91,"15":91,"16":83,"17":83,"18":83,"19":10,"20":73,"21":70,"22":73,"23":2135,"24":73,"25":70,"26":9465,"27":9417,"28":48,"29":0,"30":48,"31":0,"32":48,"33":0,"34":48,"35":0,"36":48,"37":48,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":70,"48":214,"49":214,"50":214,"51":214,"52":214,"53":214,"54":214,"55":214,"56":1,"57":214,"58":213,"59":87,"60":126,"61":37,"62":89,"63":71,"64":18,"65":18,"66":0,"67":205,"68":91,"69":91,"70":91,"71":339,"72":91,"73":1},"f":{"0":5,"1":264,"2":91,"3":70,"4":9465,"5":214,"6":91},"b":{"0":[1,1,1],"1":[5,0],"2":[5,5],"3":[10,73],"4":[70,3],"5":[9417,48],"6":[0,48],"7":[0,48],"8":[0,48],"9":[0,48],"10":[48,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[1,213],"16":[87,126],"17":[213,154,136],"18":[37,89],"19":[126,102],"20":[71,18],"21":[18,0]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectQuery.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import InsightFacade from \"../controller/InsightFacade\";\nimport {InsightError, InsightResult, ResultTooLargeError} from \"../controller/IInsightFacade\";\nimport SectionsDatasetEntry from \"../controller/SectionsDatasetEntry\";\nimport SectionEntry from \"../controller/SectionEntry\";\nimport CollectMcomp from \"./collectMcomp\";\nimport CollectScomp from \"./collectScomp\";\nimport CollectLogicComp from \"./collectLogicComp\";\nimport {collectInsightResult, compare} from \"./collectionHelpers\";\nimport CollectAll from \"./collectAll\";\nimport CollectNegComp from \"./collectNegComp\";\n\nexport interface Property {\n\tkey: string,\n\tvalue: string | number\n}\nexport default class CollectQuery {\n\tprivate query: object;\n\tprivate datasetEntries: SectionsDatasetEntry[] = [];\n\t// private resultCols = new Set<string>();\n\n\tconstructor(query: object, datasetEntries: SectionsDatasetEntry[]) {\n\t\tthis.query = query;\n\t\tthis.datasetEntries = datasetEntries;\n\t}\n\n\tpublic async CollectQuery(): Promise<InsightResult[]> {\n\t\tlet final: object[] = [];\n\t\tlet resultCols: Set<string> = this.collectOptions(this.query[\"OPTIONS\" as keyof typeof this.query]);\n\n\t\tlet r: SectionEntry[] = this.collectBody(this.query[\"WHERE\" as keyof typeof this.query]);\n\n\t\tlet options = this.query[\"OPTIONS\" as keyof typeof this.query];\n\t\tlet orderCol: string | undefined = options[\"ORDER\" as keyof  typeof options];\n\n\t\tif (r.length >= 5000) {\n\t\t\tthrow new ResultTooLargeError(\"Only queries with a maximum of 5000 results are supported\");\n\t\t}\n\t\tif (orderCol !== undefined) {\n\t\t\tr = this.orderBy(r, orderCol);\n\t\t}\n\t\tfor (let sec of r) {\n\t\t\tfinal.push(collectInsightResult(sec, resultCols));\n\t\t}\n\n\t\treturn final as InsightResult[];\n\t}\n\n\tprivate orderBy(sections: SectionEntry[], orderCol: string): SectionEntry[] {\n\t\tlet keyField = orderCol.split(\"_\")[1];\n\t\tfunction orderCompare(section1: SectionEntry, section2: SectionEntry) {\n\t\t\tif (keyField === \"avg\") {\n\t\t\t\treturn compare(section1.get_avg(), section2.get_avg());\n\t\t\t} else if (keyField === \"pass\") {\n\t\t\t\treturn compare(section1.get_pass(), section2.get_pass());\n\t\t\t} else if (keyField === \"fail\") {\n\t\t\t\treturn compare(section1.get_fail(), section2.get_fail());\n\t\t\t} else if (keyField === \"audit\") {\n\t\t\t\treturn compare(section1.get_audit(), section2.get_audit());\n\t\t\t} else if (keyField === \"year\") {\n\t\t\t\treturn compare(section1.get_year(), section2.get_year());\n\t\t\t} else if (keyField === \"dept\") {\n\t\t\t\treturn compare(section1.get_dept(),section2.get_dept());\n\t\t\t} else if (keyField === \"id\") {\n\t\t\t\treturn compare(section1.get_id(), section2.get_id());\n\t\t\t} else if (keyField === \"instructor\") {\n\t\t\t\treturn compare(section1.get_instructor(), section2.get_instructor());\n\t\t\t} else if (keyField === \"title\") {\n\t\t\t\treturn compare(section1.get_title(), section2.get_title());\n\t\t\t} else if (keyField === \"uuid\") {\n\t\t\t\treturn compare(section1.get_uuid(), section2.get_uuid());\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t\treturn sections.sort(orderCompare);\n\t}\n\n\tpublic collectBody(body: object): SectionEntry[] {\n\t\tlet keys: string[];\n\t\tkeys = Object.keys(body);\n\n\t\tlet propertiesToAdd: SectionEntry[] = [];\n\n\t\tlet collectM = new CollectMcomp(this.datasetEntries);\n\t\tlet collectS = new CollectScomp(this.datasetEntries);\n\t\tlet collectLogic = new CollectLogicComp(this.datasetEntries);\n\t\tlet collect = new CollectAll(this.datasetEntries);\n\t\tlet collectNeg = new CollectNegComp(this.datasetEntries);\n\n\t\tif (keys.length === 0) {\n\t\t\tpropertiesToAdd = collect.collectAllQueries();\n\t\t}\n\t\tfor (let key of keys) {\n\t\t\tif (key === \"GT\" || key === \"LT\" || key === \"EQ\") { // MCOMP\n\t\t\t\tpropertiesToAdd = collectM.collectMCOMP(body[key as keyof typeof body], key);\n\t\t\t} else if (key === \"AND\" || key === \"OR\") { // LOGICCOMP\n\t\t\t\t// console.log(\"key body\", key);\n\t\t\t\tpropertiesToAdd = collectLogic.collectLogicComp(body[key as keyof typeof body], key);\n\t\t\t} else if (key === \"IS\") { // SCOMP\n\t\t\t\tpropertiesToAdd = collectS.collectSCOMP(body[key as keyof typeof body]);\n\t\t\t} else if (key === \"NOT\") { // NEGATION\n\t\t\t\tpropertiesToAdd = collectNeg.collectNegComp(body[key as keyof typeof body]);\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"Invalid Query - Failed in Body\");\n\t\t\t}\n\t\t}\n\t\treturn propertiesToAdd;\n\t}\n\n\tprivate collectOptions(options: object): Set<string>  {\n\t\tlet resultCols = new Set<string>();\n\n\t\tlet cols: string[] = options[\"COLUMNS\" as keyof  typeof options];\n\t\tfor (let col of cols) {\n\t\t\tresultCols.add(col);\n\t\t}\n\n\t\treturn resultCols;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1178e5a68aeaf0a0a7b2115d68a4e50bd9399fef","contentHash":"4a057f7be130857f9e668b3aedeb4858a761623152255d98eeb5146fae1f3d20"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectMcomp.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectMcomp.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":64}},"2":{"start":{"line":5,"column":21},"end":{"line":5,"column":23}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":45}},"4":{"start":{"line":10,"column":30},"end":{"line":10,"column":32}},"5":{"start":{"line":11,"column":23},"end":{"line":11,"column":41}},"6":{"start":{"line":12,"column":26},"end":{"line":12,"column":51}},"7":{"start":{"line":13,"column":24},"end":{"line":13,"column":29}},"8":{"start":{"line":14,"column":30},"end":{"line":14,"column":55}},"9":{"start":{"line":15,"column":22},"end":{"line":15,"column":40}},"10":{"start":{"line":16,"column":8},"end":{"line":28,"column":9}},"11":{"start":{"line":17,"column":12},"end":{"line":27,"column":13}},"12":{"start":{"line":18,"column":16},"end":{"line":18,"column":33}},"13":{"start":{"line":19,"column":16},"end":{"line":26,"column":17}},"14":{"start":{"line":20,"column":20},"end":{"line":25,"column":21}},"15":{"start":{"line":21,"column":43},"end":{"line":21,"column":97}},"16":{"start":{"line":22,"column":24},"end":{"line":24,"column":25}},"17":{"start":{"line":23,"column":28},"end":{"line":23,"column":63}},"18":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"19":{"start":{"line":30,"column":12},"end":{"line":30,"column":74}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":31}},"21":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"22":{"start":{"line":36,"column":12},"end":{"line":36,"column":27}},"23":{"start":{"line":38,"column":8},"end":{"line":38,"column":20}},"24":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"25":{"start":{"line":42,"column":12},"end":{"line":42,"column":27}},"26":{"start":{"line":44,"column":8},"end":{"line":44,"column":20}},"27":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"28":{"start":{"line":48,"column":12},"end":{"line":48,"column":27}},"29":{"start":{"line":50,"column":8},"end":{"line":50,"column":20}},"30":{"start":{"line":53,"column":21},"end":{"line":53,"column":25}},"31":{"start":{"line":54,"column":8},"end":{"line":108,"column":9}},"32":{"start":{"line":55,"column":12},"end":{"line":63,"column":13}},"33":{"start":{"line":56,"column":16},"end":{"line":56,"column":73}},"34":{"start":{"line":58,"column":17},"end":{"line":63,"column":13}},"35":{"start":{"line":59,"column":16},"end":{"line":59,"column":73}},"36":{"start":{"line":61,"column":17},"end":{"line":63,"column":13}},"37":{"start":{"line":62,"column":16},"end":{"line":62,"column":73}},"38":{"start":{"line":65,"column":13},"end":{"line":108,"column":9}},"39":{"start":{"line":66,"column":12},"end":{"line":74,"column":13}},"40":{"start":{"line":67,"column":16},"end":{"line":67,"column":74}},"41":{"start":{"line":69,"column":17},"end":{"line":74,"column":13}},"42":{"start":{"line":70,"column":16},"end":{"line":70,"column":74}},"43":{"start":{"line":72,"column":17},"end":{"line":74,"column":13}},"44":{"start":{"line":73,"column":16},"end":{"line":73,"column":74}},"45":{"start":{"line":76,"column":13},"end":{"line":108,"column":9}},"46":{"start":{"line":77,"column":12},"end":{"line":85,"column":13}},"47":{"start":{"line":78,"column":16},"end":{"line":78,"column":74}},"48":{"start":{"line":80,"column":17},"end":{"line":85,"column":13}},"49":{"start":{"line":81,"column":16},"end":{"line":81,"column":74}},"50":{"start":{"line":83,"column":17},"end":{"line":85,"column":13}},"51":{"start":{"line":84,"column":16},"end":{"line":84,"column":74}},"52":{"start":{"line":87,"column":13},"end":{"line":108,"column":9}},"53":{"start":{"line":88,"column":12},"end":{"line":96,"column":13}},"54":{"start":{"line":89,"column":16},"end":{"line":89,"column":75}},"55":{"start":{"line":91,"column":17},"end":{"line":96,"column":13}},"56":{"start":{"line":92,"column":16},"end":{"line":92,"column":75}},"57":{"start":{"line":94,"column":17},"end":{"line":96,"column":13}},"58":{"start":{"line":95,"column":16},"end":{"line":95,"column":75}},"59":{"start":{"line":98,"column":13},"end":{"line":108,"column":9}},"60":{"start":{"line":99,"column":12},"end":{"line":107,"column":13}},"61":{"start":{"line":100,"column":16},"end":{"line":100,"column":74}},"62":{"start":{"line":102,"column":17},"end":{"line":107,"column":13}},"63":{"start":{"line":103,"column":16},"end":{"line":103,"column":74}},"64":{"start":{"line":105,"column":17},"end":{"line":107,"column":13}},"65":{"start":{"line":106,"column":16},"end":{"line":106,"column":74}},"66":{"start":{"line":109,"column":8},"end":{"line":109,"column":22}},"67":{"start":{"line":112,"column":0},"end":{"line":112,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":32},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":29},"end":{"line":33,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":40},"end":{"line":39,"column":5}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":40},"end":{"line":45,"column":5}},"line":40},"4":{"name":"(anonymous_4)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":40},"end":{"line":51,"column":5}},"line":46},"5":{"name":"(anonymous_5)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":50},"end":{"line":110,"column":5}},"line":52}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":12},"end":{"line":27,"column":13}},"type":"if","locations":[{"start":{"line":17,"column":12},"end":{"line":27,"column":13}},{"start":{"line":17,"column":12},"end":{"line":27,"column":13}}],"line":17},"1":{"loc":{"start":{"line":22,"column":24},"end":{"line":24,"column":25}},"type":"if","locations":[{"start":{"line":22,"column":24},"end":{"line":24,"column":25}},{"start":{"line":22,"column":24},"end":{"line":24,"column":25}}],"line":22},"2":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"3":{"loc":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},{"start":{"line":35,"column":8},"end":{"line":37,"column":9}}],"line":35},"4":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}],"line":41},"5":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"6":{"loc":{"start":{"line":54,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":108,"column":9}},{"start":{"line":54,"column":8},"end":{"line":108,"column":9}}],"line":54},"7":{"loc":{"start":{"line":55,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":63,"column":13}},{"start":{"line":55,"column":12},"end":{"line":63,"column":13}}],"line":55},"8":{"loc":{"start":{"line":58,"column":17},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":17},"end":{"line":63,"column":13}},{"start":{"line":58,"column":17},"end":{"line":63,"column":13}}],"line":58},"9":{"loc":{"start":{"line":61,"column":17},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":17},"end":{"line":63,"column":13}},{"start":{"line":61,"column":17},"end":{"line":63,"column":13}}],"line":61},"10":{"loc":{"start":{"line":65,"column":13},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":13},"end":{"line":108,"column":9}},{"start":{"line":65,"column":13},"end":{"line":108,"column":9}}],"line":65},"11":{"loc":{"start":{"line":66,"column":12},"end":{"line":74,"column":13}},"type":"if","locations":[{"start":{"line":66,"column":12},"end":{"line":74,"column":13}},{"start":{"line":66,"column":12},"end":{"line":74,"column":13}}],"line":66},"12":{"loc":{"start":{"line":69,"column":17},"end":{"line":74,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":17},"end":{"line":74,"column":13}},{"start":{"line":69,"column":17},"end":{"line":74,"column":13}}],"line":69},"13":{"loc":{"start":{"line":72,"column":17},"end":{"line":74,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":17},"end":{"line":74,"column":13}},{"start":{"line":72,"column":17},"end":{"line":74,"column":13}}],"line":72},"14":{"loc":{"start":{"line":76,"column":13},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":13},"end":{"line":108,"column":9}},{"start":{"line":76,"column":13},"end":{"line":108,"column":9}}],"line":76},"15":{"loc":{"start":{"line":77,"column":12},"end":{"line":85,"column":13}},"type":"if","locations":[{"start":{"line":77,"column":12},"end":{"line":85,"column":13}},{"start":{"line":77,"column":12},"end":{"line":85,"column":13}}],"line":77},"16":{"loc":{"start":{"line":80,"column":17},"end":{"line":85,"column":13}},"type":"if","locations":[{"start":{"line":80,"column":17},"end":{"line":85,"column":13}},{"start":{"line":80,"column":17},"end":{"line":85,"column":13}}],"line":80},"17":{"loc":{"start":{"line":83,"column":17},"end":{"line":85,"column":13}},"type":"if","locations":[{"start":{"line":83,"column":17},"end":{"line":85,"column":13}},{"start":{"line":83,"column":17},"end":{"line":85,"column":13}}],"line":83},"18":{"loc":{"start":{"line":87,"column":13},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":13},"end":{"line":108,"column":9}},{"start":{"line":87,"column":13},"end":{"line":108,"column":9}}],"line":87},"19":{"loc":{"start":{"line":88,"column":12},"end":{"line":96,"column":13}},"type":"if","locations":[{"start":{"line":88,"column":12},"end":{"line":96,"column":13}},{"start":{"line":88,"column":12},"end":{"line":96,"column":13}}],"line":88},"20":{"loc":{"start":{"line":91,"column":17},"end":{"line":96,"column":13}},"type":"if","locations":[{"start":{"line":91,"column":17},"end":{"line":96,"column":13}},{"start":{"line":91,"column":17},"end":{"line":96,"column":13}}],"line":91},"21":{"loc":{"start":{"line":94,"column":17},"end":{"line":96,"column":13}},"type":"if","locations":[{"start":{"line":94,"column":17},"end":{"line":96,"column":13}},{"start":{"line":94,"column":17},"end":{"line":96,"column":13}}],"line":94},"22":{"loc":{"start":{"line":98,"column":13},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":13},"end":{"line":108,"column":9}},{"start":{"line":98,"column":13},"end":{"line":108,"column":9}}],"line":98},"23":{"loc":{"start":{"line":99,"column":12},"end":{"line":107,"column":13}},"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":107,"column":13}},{"start":{"line":99,"column":12},"end":{"line":107,"column":13}}],"line":99},"24":{"loc":{"start":{"line":102,"column":17},"end":{"line":107,"column":13}},"type":"if","locations":[{"start":{"line":102,"column":17},"end":{"line":107,"column":13}},{"start":{"line":102,"column":17},"end":{"line":107,"column":13}}],"line":102},"25":{"loc":{"start":{"line":105,"column":17},"end":{"line":107,"column":13}},"type":"if","locations":[{"start":{"line":105,"column":17},"end":{"line":107,"column":13}},{"start":{"line":105,"column":17},"end":{"line":107,"column":13}}],"line":105}},"s":{"0":1,"1":1,"2":214,"3":214,"4":87,"5":87,"6":87,"7":87,"8":87,"9":87,"10":87,"11":87,"12":84,"13":84,"14":499296,"15":5427408,"16":5427408,"17":1664215,"18":87,"19":3,"20":84,"21":3618272,"22":1035388,"23":2582884,"24":646120,"25":571,"26":645549,"27":1163016,"28":628256,"29":534760,"30":5427408,"31":5427408,"32":3618272,"33":2519868,"34":1098404,"35":646120,"36":452284,"37":452284,"38":1809136,"39":516896,"40":387672,"41":129224,"42":0,"43":129224,"44":129224,"45":1292240,"46":581508,"47":193836,"48":387672,"49":0,"50":387672,"51":387672,"52":710732,"53":452284,"54":258448,"55":193836,"56":0,"57":193836,"58":193836,"59":258448,"60":258448,"61":258448,"62":0,"63":0,"64":0,"65":0,"66":5427408,"67":1},"f":{"0":214,"1":87,"2":3618272,"3":646120,"4":1163016,"5":5427408},"b":{"0":[84,3],"1":[1664215,3763193],"2":[3,84],"3":[1035388,2582884],"4":[571,645549],"5":[628256,534760],"6":[3618272,1809136],"7":[2519868,1098404],"8":[646120,452284],"9":[452284,0],"10":[516896,1292240],"11":[387672,129224],"12":[0,129224],"13":[129224,0],"14":[581508,710732],"15":[193836,387672],"16":[0,387672],"17":[387672,0],"18":[452284,258448],"19":[258448,193836],"20":[0,193836],"21":[193836,0],"22":[258448,0],"23":[258448,0],"24":[0,0],"25":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectMcomp.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectMcomp.ts"],"names":[],"mappings":"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","sourcesContent":["import SectionsDatasetEntry from \"../controller/SectionsDatasetEntry\";\nimport SectionEntry from \"../controller/SectionEntry\";\nimport {Property} from \"./collectQuery\";\nimport {collectInsightResult, convertArrayOfObjectToObject} from \"./collectionHelpers\";\nimport {InsightError} from \"../controller/IInsightFacade\";\n\nexport default class CollectMcomp {\n\tprivate datasetEntries: SectionsDatasetEntry[] = [];\n\n\tconstructor(datasetEntries: SectionsDatasetEntry[]) {\n\t\tthis.datasetEntries = datasetEntries;\n\t}\n\n\tpublic collectMCOMP(mcomp: object, key: string): SectionEntry[] {\n\t\tlet propertiesToAdd: SectionEntry[] = [];\n\n\t\tlet localKey: string[] = Object.keys(mcomp); // sections_id\n\t\tconst datasetId = localKey[0].split(\"_\")[0];\n\t\tlet isValidId = false;\n\t\tconst localKeyField = localKey[0].split(\"_\")[1]; // id\n\t\tconst value: number = mcomp[localKey[0] as keyof typeof mcomp];\n\n\t\tfor (let dataset of this.datasetEntries) {\n\t\t\tif (String(datasetId) === String(dataset.get_id())) {\n\t\t\t\tisValidId = true;\n\t\t\t\tfor (let course of dataset.get_courses()) {\n\t\t\t\t\tfor (let section of course.getSections()) {\n\t\t\t\t\t\tlet sectionEntry: SectionEntry | null = this.handleMFields(section, localKeyField, key, value);\n\t\t\t\t\t\t// if (Object.keys(obj).length !== 0) {\n\t\t\t\t\t\t// \tpropertiesToAdd.push(obj);\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tif (sectionEntry !==  null) {\n\t\t\t\t\t\t\tpropertiesToAdd.push(sectionEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!isValidId) {\n\t\t\tthrow new InsightError(\"Invalid dataset id\");\n\t\t}\n\t\treturn propertiesToAdd;\n\t}\n\n\t// private helpers\n\n\tprivate applyGT(section: SectionEntry, value: number, sectionVal: number): SectionEntry | null {\n\t\t// let propertiesToAdd: Property[] = [];\n\t\tif (sectionVal > value) {\n\t\t\t// console.log(\"applyGT result cols\", this.resultCols);\n\t\t\t// propertiesToAdd = collectInsightResult(section, this.resultCols);\n\t\t\treturn section;\n\t\t}\n\t\treturn null;\n\n\t\t// return convertArrayOfObjectToObject(propertiesToAdd);\n\t}\n\n\tprivate applyEQ(section: SectionEntry, value: number, sectionVal: number): SectionEntry | null {\n\t\t// let propertiesToAdd: Property[] = [];\n\t\tif (sectionVal === value) {\n\t\t\treturn  section;\n\t\t\t// propertiesToAdd = collectInsightResult(section, this.resultCols);\n\t\t}\n\t\treturn null;\n\t\t// return convertArrayOfObjectToObject(propertiesToAdd);\n\t}\n\n\tprivate applyLT(section: SectionEntry, value: number, sectionVal: number): SectionEntry | null {\n\t\t// let propertiesToAdd: Property[] = [];\n\t\tif (sectionVal < value) {\n\t\t\treturn section;\n\t\t\t// propertiesToAdd = collectInsightResult(section, this.resultCols);\n\t\t}\n\t\treturn null;\n\t\t// return convertArrayOfObjectToObject(propertiesToAdd);\n\t}\n\n\tprivate handleMFields(section: SectionEntry, lKeyField: string, key: string, value: number): SectionEntry | null {\n\t\tlet result: SectionEntry | null = null;\n\n\t\tif (lKeyField === \"avg\") {\n\t\t\tif (key === \"GT\") {\n\t\t\t\tresult = this.applyGT(section, value, section.get_avg());\n\t\t\t} else if (key === \"EQ\") {\n\t\t\t\tresult = this.applyEQ(section, value, section.get_avg());\n\t\t\t} else if (key === \"LT\") {\n\t\t\t\tresult = this.applyLT(section, value, section.get_avg());\n\t\t\t}\n\t\t} else if (lKeyField === \"pass\") {\n\t\t\tif (key === \"GT\") {\n\t\t\t\tresult = this.applyGT(section, value, section.get_pass());\n\t\t\t} else if (key === \"EQ\") {\n\t\t\t\tresult = this.applyEQ(section, value, section.get_pass());\n\t\t\t} else if (key === \"LT\") {\n\t\t\t\tresult = this.applyLT(section, value, section.get_pass());\n\t\t\t}\n\t\t} else if (lKeyField === \"fail\") {\n\t\t\tif (key === \"GT\") {\n\t\t\t\tresult = this.applyGT(section, value, section.get_fail());\n\t\t\t} else if (key === \"EQ\") {\n\t\t\t\tresult = this.applyEQ(section, value, section.get_fail());\n\t\t\t} else if (key === \"LT\") {\n\t\t\t\tresult = this.applyLT(section, value, section.get_fail());\n\t\t\t}\n\t\t} else if (lKeyField === \"audit\") {\n\t\t\tif (key === \"GT\") {\n\t\t\t\tresult = this.applyGT(section, value, section.get_audit());\n\t\t\t} else if (key === \"EQ\") {\n\t\t\t\tresult = this.applyEQ(section, value, section.get_audit());\n\t\t\t} else if (key === \"LT\") {\n\t\t\t\tresult = this.applyLT(section, value, section.get_audit());\n\t\t\t}\n\t\t} else if (lKeyField === \"year\") {\n\t\t\tif (key === \"GT\") {\n\t\t\t\tresult = this.applyGT(section, value, section.get_year());\n\t\t\t} else if (key === \"EQ\") {\n\t\t\t\tresult = this.applyEQ(section, value, section.get_year());\n\t\t\t} else if (key === \"LT\") {\n\t\t\t\tresult = this.applyLT(section, value, section.get_year());\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d75cac1d85e0cc108eec41282082e21bbbe94421","contentHash":"56bbd4c6997ff99e51911130c87137fefe64434ddb14481baba944e1f61dae8b"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectScomp.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectScomp.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":64}},"2":{"start":{"line":5,"column":21},"end":{"line":5,"column":23}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":45}},"4":{"start":{"line":10,"column":30},"end":{"line":10,"column":32}},"5":{"start":{"line":11,"column":23},"end":{"line":11,"column":41}},"6":{"start":{"line":12,"column":26},"end":{"line":12,"column":51}},"7":{"start":{"line":13,"column":24},"end":{"line":13,"column":29}},"8":{"start":{"line":14,"column":30},"end":{"line":14,"column":55}},"9":{"start":{"line":15,"column":22},"end":{"line":15,"column":40}},"10":{"start":{"line":16,"column":8},"end":{"line":28,"column":9}},"11":{"start":{"line":17,"column":12},"end":{"line":27,"column":13}},"12":{"start":{"line":18,"column":16},"end":{"line":18,"column":33}},"13":{"start":{"line":19,"column":16},"end":{"line":26,"column":17}},"14":{"start":{"line":20,"column":20},"end":{"line":25,"column":21}},"15":{"start":{"line":21,"column":43},"end":{"line":21,"column":92}},"16":{"start":{"line":22,"column":24},"end":{"line":24,"column":25}},"17":{"start":{"line":23,"column":28},"end":{"line":23,"column":63}},"18":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"19":{"start":{"line":30,"column":12},"end":{"line":30,"column":74}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":31}},"21":{"start":{"line":35,"column":21},"end":{"line":35,"column":25}},"22":{"start":{"line":36,"column":8},"end":{"line":50,"column":9}},"23":{"start":{"line":37,"column":12},"end":{"line":37,"column":78}},"24":{"start":{"line":39,"column":13},"end":{"line":50,"column":9}},"25":{"start":{"line":40,"column":12},"end":{"line":40,"column":76}},"26":{"start":{"line":42,"column":13},"end":{"line":50,"column":9}},"27":{"start":{"line":43,"column":12},"end":{"line":43,"column":84}},"28":{"start":{"line":45,"column":13},"end":{"line":50,"column":9}},"29":{"start":{"line":46,"column":12},"end":{"line":46,"column":79}},"30":{"start":{"line":48,"column":13},"end":{"line":50,"column":9}},"31":{"start":{"line":49,"column":12},"end":{"line":49,"column":78}},"32":{"start":{"line":51,"column":8},"end":{"line":51,"column":22}},"33":{"start":{"line":54,"column":21},"end":{"line":54,"column":25}},"34":{"start":{"line":55,"column":8},"end":{"line":66,"column":9}},"35":{"start":{"line":56,"column":12},"end":{"line":56,"column":71}},"36":{"start":{"line":58,"column":13},"end":{"line":66,"column":9}},"37":{"start":{"line":59,"column":12},"end":{"line":59,"column":65}},"38":{"start":{"line":61,"column":13},"end":{"line":66,"column":9}},"39":{"start":{"line":62,"column":12},"end":{"line":62,"column":65}},"40":{"start":{"line":64,"column":13},"end":{"line":66,"column":9}},"41":{"start":{"line":65,"column":12},"end":{"line":65,"column":67}},"42":{"start":{"line":67,"column":8},"end":{"line":67,"column":22}},"43":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"44":{"start":{"line":71,"column":12},"end":{"line":71,"column":27}},"45":{"start":{"line":73,"column":8},"end":{"line":73,"column":20}},"46":{"start":{"line":76,"column":20},"end":{"line":76,"column":39}},"47":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"48":{"start":{"line":78,"column":12},"end":{"line":78,"column":27}},"49":{"start":{"line":80,"column":8},"end":{"line":80,"column":20}},"50":{"start":{"line":83,"column":20},"end":{"line":83,"column":39}},"51":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"52":{"start":{"line":85,"column":12},"end":{"line":85,"column":27}},"53":{"start":{"line":87,"column":8},"end":{"line":87,"column":20}},"54":{"start":{"line":90,"column":20},"end":{"line":90,"column":39}},"55":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"56":{"start":{"line":92,"column":12},"end":{"line":92,"column":27}},"57":{"start":{"line":94,"column":8},"end":{"line":94,"column":20}},"58":{"start":{"line":97,"column":0},"end":{"line":97,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":32},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":24},"end":{"line":33,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":49},"end":{"line":52,"column":5}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":50},"end":{"line":68,"column":5}},"line":53},"4":{"name":"(anonymous_4)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":47},"end":{"line":74,"column":5}},"line":69},"5":{"name":"(anonymous_5)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":41},"end":{"line":81,"column":5}},"line":75},"6":{"name":"(anonymous_6)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":43},"end":{"line":88,"column":5}},"line":82},"7":{"name":"(anonymous_7)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":41},"end":{"line":95,"column":5}},"line":89}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":12},"end":{"line":27,"column":13}},"type":"if","locations":[{"start":{"line":17,"column":12},"end":{"line":27,"column":13}},{"start":{"line":17,"column":12},"end":{"line":27,"column":13}}],"line":17},"1":{"loc":{"start":{"line":22,"column":24},"end":{"line":24,"column":25}},"type":"if","locations":[{"start":{"line":22,"column":24},"end":{"line":24,"column":25}},{"start":{"line":22,"column":24},"end":{"line":24,"column":25}}],"line":22},"2":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"3":{"loc":{"start":{"line":36,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":50,"column":9}},{"start":{"line":36,"column":8},"end":{"line":50,"column":9}}],"line":36},"4":{"loc":{"start":{"line":39,"column":13},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":13},"end":{"line":50,"column":9}},{"start":{"line":39,"column":13},"end":{"line":50,"column":9}}],"line":39},"5":{"loc":{"start":{"line":42,"column":13},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":13},"end":{"line":50,"column":9}},{"start":{"line":42,"column":13},"end":{"line":50,"column":9}}],"line":42},"6":{"loc":{"start":{"line":45,"column":13},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":13},"end":{"line":50,"column":9}},{"start":{"line":45,"column":13},"end":{"line":50,"column":9}}],"line":45},"7":{"loc":{"start":{"line":48,"column":13},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":13},"end":{"line":50,"column":9}},{"start":{"line":48,"column":13},"end":{"line":50,"column":9}}],"line":48},"8":{"loc":{"start":{"line":55,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":66,"column":9}},{"start":{"line":55,"column":8},"end":{"line":66,"column":9}}],"line":55},"9":{"loc":{"start":{"line":58,"column":13},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":13},"end":{"line":66,"column":9}},{"start":{"line":58,"column":13},"end":{"line":66,"column":9}}],"line":58},"10":{"loc":{"start":{"line":58,"column":17},"end":{"line":58,"column":61}},"type":"binary-expr","locations":[{"start":{"line":58,"column":17},"end":{"line":58,"column":38}},{"start":{"line":58,"column":42},"end":{"line":58,"column":61}}],"line":58},"11":{"loc":{"start":{"line":61,"column":13},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":13},"end":{"line":66,"column":9}},{"start":{"line":61,"column":13},"end":{"line":66,"column":9}}],"line":61},"12":{"loc":{"start":{"line":64,"column":13},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":13},"end":{"line":66,"column":9}},{"start":{"line":64,"column":13},"end":{"line":66,"column":9}}],"line":64},"13":{"loc":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},{"start":{"line":70,"column":8},"end":{"line":72,"column":9}}],"line":70},"14":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"15":{"loc":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},{"start":{"line":84,"column":8},"end":{"line":86,"column":9}}],"line":84},"16":{"loc":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},{"start":{"line":91,"column":8},"end":{"line":93,"column":9}}],"line":91}},"s":{"0":1,"1":1,"2":214,"3":214,"4":71,"5":71,"6":71,"7":71,"8":71,"9":71,"10":71,"11":71,"12":66,"13":66,"14":392304,"15":4264392,"16":4264392,"17":826509,"18":71,"19":5,"20":66,"21":4264392,"22":4264392,"23":2326032,"24":1938360,"25":129224,"26":1809136,"27":193836,"28":1615300,"29":710732,"30":904568,"31":904568,"32":4264392,"33":4264392,"34":4264392,"35":2002972,"36":2261420,"37":1421464,"38":839956,"39":258448,"40":581508,"41":581508,"42":4264392,"43":2002972,"44":3423,"45":1999549,"46":258448,"47":258448,"48":8478,"49":249970,"50":581508,"51":581508,"52":42823,"53":538685,"54":1421464,"55":1421464,"56":771785,"57":649679,"58":1},"f":{"0":214,"1":71,"2":4264392,"3":4264392,"4":2002972,"5":258448,"6":581508,"7":1421464},"b":{"0":[66,5],"1":[826509,3437883],"2":[5,66],"3":[2326032,1938360],"4":[129224,1809136],"5":[193836,1615300],"6":[710732,904568],"7":[904568,0],"8":[2002972,2261420],"9":[1421464,839956],"10":[2261420,1679912],"11":[258448,581508],"12":[581508,0],"13":[3423,1999549],"14":[8478,249970],"15":[42823,538685],"16":[771785,649679]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectScomp.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectScomp.ts"],"names":[],"mappings":"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","sourcesContent":["import SectionsDatasetEntry from \"../controller/SectionsDatasetEntry\";\nimport SectionEntry from \"../controller/SectionEntry\";\nimport {collectInsightResult, convertArrayOfObjectToObject} from \"./collectionHelpers\";\nimport {Property} from \"./collectQuery\";\nimport {InsightError} from \"../controller/IInsightFacade\";\n\nexport default class CollectScomp {\n\tprivate datasetEntries: SectionsDatasetEntry[] = [];\n\n\tconstructor(datasetEntries: SectionsDatasetEntry[]) {\n\t\tthis.datasetEntries = datasetEntries;\n\t}\n\n\tpublic collectSCOMP(scomp: object): SectionEntry[] {\n\t\tlet propertiesToAdd: SectionEntry[] = [];\n\n\t\tlet localKey: string[] = Object.keys(scomp);\n\t\tconst datasetId = localKey[0].split(\"_\")[0];\n\t\tlet isValidId = false;\n\t\tconst localKeyField = localKey[0].split(\"_\")[1];\n\t\tconst value: string = scomp[localKey[0] as keyof typeof scomp];\n\n\t\tfor (let dataset of this.datasetEntries) {\n\t\t\tif (String(datasetId) === String(dataset.get_id())) {\n\t\t\t\tisValidId = true;\n\t\t\t\tfor (let course of dataset.get_courses()) {\n\t\t\t\t\tfor (let section of course.getSections()) {\n\t\t\t\t\t\tlet sectionEntry: SectionEntry | null = this.handleSFields(section, localKeyField, value);\n\t\t\t\t\t\t// if (Object.keys(obj).length !== 0) {\n\t\t\t\t\t\t// \tpropertiesToAdd.push(obj);\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tif (sectionEntry !== null) {\n\t\t\t\t\t\t\tpropertiesToAdd.push(sectionEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!isValidId) {\n\t\t\tthrow new InsightError(\"Invalid dataset id\");\n\t\t}\n\t\treturn propertiesToAdd;\n\t}\n\n\t// private helpers\n\n\tprivate handleSFields(section: SectionEntry, localKeyField: string, value: string): SectionEntry | null {\n\t\tlet result: SectionEntry | null = null;\n\n\t\tif (localKeyField === \"dept\") {\n\t\t\tresult = this.handleWildCards(section, value, section.get_dept());\n\t\t} else if (localKeyField === \"id\") {\n\t\t\tresult = this.handleWildCards(section, value, section.get_id());\n\t\t} else if (localKeyField === \"instructor\") {\n\t\t\tresult = this.handleWildCards(section, value, section.get_instructor());\n\t\t} else if (localKeyField === \"title\") {\n\t\t\tresult = this.handleWildCards(section, value, section.get_title());\n\t\t} else if (localKeyField === \"uuid\") {\n\t\t\tresult = this.handleWildCards(section, value, section.get_uuid());\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate handleWildCards(section: SectionEntry, value: string, sectionValue: string): SectionEntry | null {\n\t\tlet result: SectionEntry | null = null;\n\n\t\tif (!value.includes(\"*\")) {\n\t\t\tresult = this.matchesExactly(section, value, sectionValue);\n\t\t} else if (value.startsWith(\"*\") && value.endsWith(\"*\")) {\n\t\t\tresult = this.contains(section, value, sectionValue);\n\t\t} else if (value.startsWith(\"*\")) {\n\t\t\tresult = this.endsWith(section, value, sectionValue);\n\t\t} else if (value.endsWith(\"*\")) {\n\t\t\tresult = this.startsWith(section, value, sectionValue);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate matchesExactly(section: SectionEntry, value: string, sectionVal: string): SectionEntry | null {\n\t\t// let propertiesToAdd: Property[] = [];\n\n\t\tif (String(sectionVal) === value) {\n\t\t\treturn section;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate endsWith(section: SectionEntry, value: string, sectionVal: string): SectionEntry | null {\n\t\t// let propertiesToAdd: Property[] = [];\n\t\tlet split = value.split(\"*\")[1];\n\t\tif (String(sectionVal).endsWith(split)) {\n\t\t\treturn section;\n\t\t\t// propertiesToAdd = collectInsightResult(section, this.resultCols);\n\t\t}\n\t\t// return convertArrayOfObjectToObject(propertiesToAdd);\n\t\treturn null;\n\t}\n\n\tprivate startsWith(section: SectionEntry, value: string, sectionVal: string): SectionEntry | null {\n\t\t// let propertiesToAdd: Property[] = [];\n\t\tlet split = value.split(\"*\")[0];\n\t\tif (String(sectionVal).startsWith(split)) {\n\t\t\t// propertiesToAdd = collectInsightResult(section, this.resultCols);\n\t\t\treturn section;\n\t\t}\n\t\t// return convertArrayOfObjectToObject(propertiesToAdd);\n\t\treturn null;\n\t}\n\n\tprivate contains(section: SectionEntry, value: string, sectionVal: string): SectionEntry | null {\n\t\t// let propertiesToAdd: Property[] = [];\n\t\tlet split = value.split(\"*\")[1];\n\n\t\tif (String(sectionVal).includes(split)) {\n\t\t\treturn section;\n\t\t\t// propertiesToAdd = collectInsightResult(section, this.resultCols);\n\t\t}\n\t\t// return convertArrayOfObjectToObject(propertiesToAdd);\n\t\treturn null;\n\t}\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9f750c84f9522ecf6ab507d6062a6060455c8869","contentHash":"4d76b03afed6af42bec5ed9cd703f6276b6b11d30fb367777dbae08c5aaffb80"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectLogicComp.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectLogicComp.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":23},"end":{"line":6,"column":65}},"4":{"start":{"line":8,"column":21},"end":{"line":8,"column":23}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":45}},"6":{"start":{"line":13,"column":30},"end":{"line":13,"column":32}},"7":{"start":{"line":14,"column":32},"end":{"line":14,"column":34}},"8":{"start":{"line":15,"column":24},"end":{"line":15,"column":46}},"9":{"start":{"line":16,"column":8},"end":{"line":21,"column":9}},"10":{"start":{"line":17,"column":31},"end":{"line":17,"column":99}},"11":{"start":{"line":19,"column":12},"end":{"line":19,"column":72}},"12":{"start":{"line":20,"column":12},"end":{"line":20,"column":48}},"13":{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},"14":{"start":{"line":23,"column":12},"end":{"line":23,"column":68}},"15":{"start":{"line":25,"column":13},"end":{"line":27,"column":9}},"16":{"start":{"line":26,"column":12},"end":{"line":26,"column":67}},"17":{"start":{"line":28,"column":8},"end":{"line":28,"column":31}},"18":{"start":{"line":31,"column":18},"end":{"line":31,"column":27}},"19":{"start":{"line":32,"column":23},"end":{"line":32,"column":47}},"20":{"start":{"line":33,"column":24},"end":{"line":33,"column":33}},"21":{"start":{"line":34,"column":22},"end":{"line":34,"column":31}},"22":{"start":{"line":35,"column":8},"end":{"line":45,"column":9}},"23":{"start":{"line":36,"column":12},"end":{"line":44,"column":13}},"24":{"start":{"line":37,"column":41},"end":{"line":37,"column":74}},"25":{"start":{"line":38,"column":16},"end":{"line":43,"column":17}},"26":{"start":{"line":39,"column":20},"end":{"line":39,"column":78}},"27":{"start":{"line":42,"column":20},"end":{"line":42,"column":57}},"28":{"start":{"line":46,"column":8},"end":{"line":50,"column":9}},"29":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"30":{"start":{"line":48,"column":16},"end":{"line":48,"column":49}},"31":{"start":{"line":51,"column":23},"end":{"line":51,"column":43}},"32":{"start":{"line":52,"column":8},"end":{"line":58,"column":9}},"33":{"start":{"line":53,"column":12},"end":{"line":57,"column":13}},"34":{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},"35":{"start":{"line":55,"column":20},"end":{"line":55,"column":57}},"36":{"start":{"line":59,"column":8},"end":{"line":59,"column":40}},"37":{"start":{"line":62,"column":18},"end":{"line":62,"column":27}},"38":{"start":{"line":63,"column":8},"end":{"line":69,"column":9}},"39":{"start":{"line":64,"column":12},"end":{"line":68,"column":13}},"40":{"start":{"line":65,"column":16},"end":{"line":67,"column":17}},"41":{"start":{"line":66,"column":20},"end":{"line":66,"column":45}},"42":{"start":{"line":70,"column":8},"end":{"line":70,"column":40}},"43":{"start":{"line":73,"column":0},"end":{"line":73,"column":35}},"44":{"start":{"line":75,"column":12},"end":{"line":75,"column":14}},"45":{"start":{"line":78,"column":8},"end":{"line":78,"column":29}},"46":{"start":{"line":81,"column":20},"end":{"line":81,"column":37}},"47":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"48":{"start":{"line":82,"column":43},"end":{"line":82,"column":72}},"49":{"start":{"line":83,"column":12},"end":{"line":83,"column":34}},"50":{"start":{"line":87,"column":8},"end":{"line":87,"column":90}},"51":{"start":{"line":87,"column":45},"end":{"line":87,"column":88}},"52":{"start":{"line":90,"column":8},"end":{"line":90,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":32},"end":{"line":11,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":37},"end":{"line":29,"column":5}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":37},"end":{"line":60,"column":5}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":36},"end":{"line":71,"column":5}},"line":61},"5":{"name":"(anonymous_5)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":24},"end":{"line":79,"column":5}},"line":77},"6":{"name":"(anonymous_6)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":14},"end":{"line":85,"column":5}},"line":80},"7":{"name":"(anonymous_7)","decl":{"start":{"line":82,"column":29},"end":{"line":82,"column":30}},"loc":{"start":{"line":82,"column":43},"end":{"line":82,"column":72}},"line":82},"8":{"name":"(anonymous_8)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":14},"end":{"line":88,"column":5}},"line":86},"9":{"name":"(anonymous_9)","decl":{"start":{"line":87,"column":31},"end":{"line":87,"column":32}},"loc":{"start":{"line":87,"column":45},"end":{"line":87,"column":88}},"line":87},"10":{"name":"(anonymous_10)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":13},"end":{"line":91,"column":5}},"line":89}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},{"start":{"line":22,"column":8},"end":{"line":27,"column":9}}],"line":22},"4":{"loc":{"start":{"line":25,"column":13},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":13},"end":{"line":27,"column":9}},{"start":{"line":25,"column":13},"end":{"line":27,"column":9}}],"line":25},"5":{"loc":{"start":{"line":38,"column":16},"end":{"line":43,"column":17}},"type":"if","locations":[{"start":{"line":38,"column":16},"end":{"line":43,"column":17}},{"start":{"line":38,"column":16},"end":{"line":43,"column":17}}],"line":38},"6":{"loc":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},{"start":{"line":47,"column":12},"end":{"line":49,"column":13}}],"line":47},"7":{"loc":{"start":{"line":53,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":57,"column":13}},{"start":{"line":53,"column":12},"end":{"line":57,"column":13}}],"line":53},"8":{"loc":{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},"type":"if","locations":[{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},{"start":{"line":54,"column":16},"end":{"line":56,"column":17}}],"line":54},"9":{"loc":{"start":{"line":65,"column":16},"end":{"line":67,"column":17}},"type":"if","locations":[{"start":{"line":65,"column":16},"end":{"line":67,"column":17}},{"start":{"line":65,"column":16},"end":{"line":67,"column":17}}],"line":65},"10":{"loc":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},{"start":{"line":82,"column":8},"end":{"line":84,"column":9}}],"line":82}},"s":{"0":1,"1":1,"2":1,"3":1,"4":214,"5":214,"6":37,"7":37,"8":37,"9":37,"10":105,"11":105,"12":105,"13":37,"14":24,"15":13,"16":13,"17":37,"18":24,"19":24,"20":24,"21":24,"22":24,"23":82,"24":2107502,"25":2107502,"26":1013036,"27":1094466,"28":24,"29":1094466,"30":129666,"31":24,"32":24,"33":529653,"34":129666,"35":129666,"36":24,"37":13,"38":13,"39":23,"40":53432,"41":53432,"42":13,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},"f":{"0":1,"1":214,"2":37,"3":24,"4":13,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[24,13],"4":[13,0],"5":[1013036,1094466],"6":[129666,964800],"7":[129666,399987],"8":[129666,0],"9":[53432,0],"10":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectLogicComp.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectLogicComp.ts"],"names":[],"mappings":"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","sourcesContent":["import SectionsDatasetEntry from \"../controller/SectionsDatasetEntry\";\nimport SectionEntry from \"../controller/SectionEntry\";\nimport CollectQuery from \"./collectQuery\";\nimport {log} from \"util\";\n\nexport default class CollectLogicComp {\n\tprivate datasetEntries: SectionsDatasetEntry[] = [];\n\n\tconstructor(datasetEntries: SectionsDatasetEntry[]) {\n\t\tthis.datasetEntries = datasetEntries;\n\t}\n\n\tpublic collectLogicComp(logiccomp: object, key: string): SectionEntry[] {\n\t\t// let start = performance.now();\n\t\t// console.log(\"key logic\", key);\n\t\tlet propertiesToAdd: SectionEntry[] = [];\n\t\tlet propertiesToLogic: SectionEntry[][] = [];\n\t\tlet localKeys: string[] = Object.keys(logiccomp); // 0,1,2,3\n\n\t\tfor (let locakKey of localKeys) {\n\t\t\tlet collectQuery = new CollectQuery(logiccomp[locakKey as keyof typeof logiccomp], this.datasetEntries);\n\t\t\tlet collectComp: SectionEntry[];\n\t\t\tcollectComp = collectQuery.collectBody(logiccomp[locakKey as keyof typeof logiccomp]);\n\t\t\t// if (Object.keys(collectComp).length !== 0){\n\t\t\tpropertiesToLogic.push(collectComp);\n\t\t\t// }\n\t\t}\n\n\t\t// let set = new SetWithContentEquality<SectionEntry>((section) => section.get_uuid());\n\t\t// for (let section of propertiesToLogic) {\n\t\t// \t// console.log(\"section\", section);\n\t\t// \tfor (let s of section) {\n\t\t// \t\t// console.log(\"s\", s);\n\t\t// \t\tset.add(s);\n\t\t// \t}\n\t\t// }\n\n\t\t// let end1 = performance.now();\n\t\t// console.log(\"LogicComp\", (end1 - start) / 1000);\n\t\tif (key === \"AND\") {\n\t\t\tpropertiesToAdd = this.handleAndComp(propertiesToLogic);\n\t\t} else if (key === \"OR\") {\n\t\t\tpropertiesToAdd = this.handleOrComp(propertiesToLogic);\n\t\t}\n\n\t\treturn propertiesToAdd;\n\t}\n\n\tprivate handleAndComp(propertiesToLogic: SectionEntry[][]): SectionEntry[] {\n\t\t// let start = performance.now();\n\n\t\t// let set = new SetWithContentEquality<SectionEntry>((section) => section.get_uuid());\n\t\tlet map = new Map<string, SectionEntry>();\n\n\t\tlet lenProps = propertiesToLogic.length;\n\t\t// console.log(lenProps);\n\t\tlet arrOfUuid = new Map<string, boolean>();\n\t\tlet hashMap = new Map<string, number>();\n\n\t\tfor (let section of propertiesToLogic) {\n\t\t\tfor (let s of section) {\n\t\t\t\tlet numberOfOccurances = hashMap.get(String(s.get_uuid()));\n\t\t\t\tif (numberOfOccurances !== undefined) {\n\t\t\t\t\thashMap.set(String(s.get_uuid()), numberOfOccurances + 1);\n\t\t\t\t} else {\n\t\t\t\t\thashMap.set(String(s.get_uuid()), 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// let end1 = performance.now();\n\t\t// console.log((end1 - start) / 1000);\n\n\t\tfor (let key of hashMap.keys()) {\n\t\t\tif (hashMap.get(key) === lenProps) {\n\t\t\t\tarrOfUuid.set(String(key), true);\n\t\t\t}\n\t\t}\n\t\t//\n\t\t// let end2 = performance.now();\n\t\t// console.log((end2 - end1) / 1000);\n\n\t\tlet sections = propertiesToLogic[0];\n\t\tfor (let section of sections) {\n\t\t\tif (arrOfUuid.has(String(section.get_uuid()))) {\n\t\t\t\tif (!map.has(String(section.get_uuid()))) {\n\t\t\t\t\tmap.set(section.get_uuid(), section);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//\n\t\t// for (let section of propertiesToLogic) {\n\t\t// \tfor (let s of section) {\n\t\t// \t\tfor (let a of arrOfUuid) {\n\t\t// \t\t\tif (String(s.get_uuid()) === a) {\n\t\t// \t\t\t\tset.add(s);\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\n\t\t// let end3 = performance.now();\n\t\t// console.log((end3 - end2) / 1000);\n\n\n\t\t//\n\t\t// return propertiesToLogic.slice(1).reduce((prev, curr) => {\n\t\t// \treturn prev.filter((obj1) => {\n\t\t// \t\treturn curr.some((obj2) => (obj1.get_uuid() === obj2.get_uuid())\n\t\t// \t\t);\n\t\t// \t});\n\t\t// },propertiesToLogic[0]);\n\n\t\treturn Array.from(map.values());\n\t}\n\n\tprivate handleOrComp(propertiesToLogic: SectionEntry[][]): SectionEntry[] {\n\t\t// let start = performance.now();\n\n\t\t// let set = new SetWithContentEquality<SectionEntry>((section) => section.get_uuid());\n\t\t//\n\t\t// for (let section of propertiesToLogic) {\n\t\t// \tfor (let s of section) {\n\t\t// \t\tset.add(s);\n\t\t// \t}\n\t\t// }\n\n\t\tlet map = new Map<string, SectionEntry>();\n\t\tfor (const sections of propertiesToLogic) {\n\t\t\tfor (const s of sections) {\n\t\t\t\tif (!map.has(String(s.get_uuid()))) {\n\t\t\t\t\tmap.set(s.get_uuid(), s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// let end1 = performance.now();\n\t\t// console.log(\"OR:\", (end1 - start) / 1000);\n\n\t\treturn Array.from(map.values());\n\t}\n\n\n}\n\nclass SetWithContentEquality<T> {\n\tprivate items: T[] = [];\n\tprivate getKey: (item: T) => string;\n\tconstructor(getKey: (item: T) => string) {\n\t\tthis.getKey = getKey;\n\t}\n\n\tpublic add(item: T): void {\n\t\tconst key = this.getKey(item);\n\t\tif (!this.items.some((existing) => this.getKey(existing) === key)) {\n\t\t\tthis.items.push(item);\n\t\t}\n\t}\n\n\tpublic has(item: T): boolean {\n\t\treturn this.items.some((existing) => this.getKey(existing) === this.getKey(item));\n\t}\n\n\tpublic values(): T[] {\n\t\treturn [...this.items];\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f4aeabf978743adedfa1568ec4b604be2778132d","contentHash":"c4bea4ee1f91db86e6e12adea0d8592e9fe70aad4bac8d4f5999ca561874abfc"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectionHelpers.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectionHelpers.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":95}},"2":{"start":{"line":5,"column":26},"end":{"line":5,"column":28}},"3":{"start":{"line":6,"column":4},"end":{"line":38,"column":5}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":46}},"5":{"start":{"line":8,"column":8},"end":{"line":37,"column":9}},"6":{"start":{"line":9,"column":12},"end":{"line":9,"column":87}},"7":{"start":{"line":11,"column":13},"end":{"line":37,"column":9}},"8":{"start":{"line":12,"column":12},"end":{"line":12,"column":88}},"9":{"start":{"line":14,"column":13},"end":{"line":37,"column":9}},"10":{"start":{"line":15,"column":12},"end":{"line":15,"column":88}},"11":{"start":{"line":17,"column":13},"end":{"line":37,"column":9}},"12":{"start":{"line":18,"column":12},"end":{"line":18,"column":89}},"13":{"start":{"line":20,"column":13},"end":{"line":37,"column":9}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":88}},"15":{"start":{"line":23,"column":13},"end":{"line":37,"column":9}},"16":{"start":{"line":24,"column":12},"end":{"line":24,"column":88}},"17":{"start":{"line":26,"column":13},"end":{"line":37,"column":9}},"18":{"start":{"line":27,"column":12},"end":{"line":27,"column":86}},"19":{"start":{"line":29,"column":13},"end":{"line":37,"column":9}},"20":{"start":{"line":30,"column":12},"end":{"line":30,"column":94}},"21":{"start":{"line":32,"column":13},"end":{"line":37,"column":9}},"22":{"start":{"line":33,"column":12},"end":{"line":33,"column":89}},"23":{"start":{"line":35,"column":13},"end":{"line":37,"column":9}},"24":{"start":{"line":36,"column":12},"end":{"line":36,"column":88}},"25":{"start":{"line":39,"column":4},"end":{"line":39,"column":57}},"26":{"start":{"line":41,"column":0},"end":{"line":41,"column":52}},"27":{"start":{"line":43,"column":4},"end":{"line":51,"column":5}},"28":{"start":{"line":44,"column":8},"end":{"line":44,"column":18}},"29":{"start":{"line":46,"column":9},"end":{"line":51,"column":5}},"30":{"start":{"line":47,"column":8},"end":{"line":47,"column":17}},"31":{"start":{"line":50,"column":8},"end":{"line":50,"column":17}},"32":{"start":{"line":53,"column":0},"end":{"line":53,"column":26}},"33":{"start":{"line":55,"column":17},"end":{"line":55,"column":19}},"34":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"35":{"start":{"line":57,"column":8},"end":{"line":57,"column":46}},"36":{"start":{"line":59,"column":4},"end":{"line":59,"column":18}},"37":{"start":{"line":61,"column":0},"end":{"line":61,"column":68}}},"fnMap":{"0":{"name":"collectInsightResult","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":29}},"loc":{"start":{"line":4,"column":51},"end":{"line":40,"column":1}},"line":4},"1":{"name":"compare","decl":{"start":{"line":42,"column":9},"end":{"line":42,"column":16}},"loc":{"start":{"line":42,"column":28},"end":{"line":52,"column":1}},"line":42},"2":{"name":"convertArrayOfObjectToObject","decl":{"start":{"line":54,"column":9},"end":{"line":54,"column":37}},"loc":{"start":{"line":54,"column":50},"end":{"line":60,"column":1}},"line":54}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":37,"column":9}},{"start":{"line":8,"column":8},"end":{"line":37,"column":9}}],"line":8},"1":{"loc":{"start":{"line":11,"column":13},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":13},"end":{"line":37,"column":9}},{"start":{"line":11,"column":13},"end":{"line":37,"column":9}}],"line":11},"2":{"loc":{"start":{"line":14,"column":13},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":13},"end":{"line":37,"column":9}},{"start":{"line":14,"column":13},"end":{"line":37,"column":9}}],"line":14},"3":{"loc":{"start":{"line":17,"column":13},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":13},"end":{"line":37,"column":9}},{"start":{"line":17,"column":13},"end":{"line":37,"column":9}}],"line":17},"4":{"loc":{"start":{"line":20,"column":13},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":13},"end":{"line":37,"column":9}},{"start":{"line":20,"column":13},"end":{"line":37,"column":9}}],"line":20},"5":{"loc":{"start":{"line":23,"column":13},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":13},"end":{"line":37,"column":9}},{"start":{"line":23,"column":13},"end":{"line":37,"column":9}}],"line":23},"6":{"loc":{"start":{"line":26,"column":13},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":13},"end":{"line":37,"column":9}},{"start":{"line":26,"column":13},"end":{"line":37,"column":9}}],"line":26},"7":{"loc":{"start":{"line":29,"column":13},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":13},"end":{"line":37,"column":9}},{"start":{"line":29,"column":13},"end":{"line":37,"column":9}}],"line":29},"8":{"loc":{"start":{"line":32,"column":13},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":13},"end":{"line":37,"column":9}},{"start":{"line":32,"column":13},"end":{"line":37,"column":9}}],"line":32},"9":{"loc":{"start":{"line":35,"column":13},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":13},"end":{"line":37,"column":9}},{"start":{"line":35,"column":13},"end":{"line":37,"column":9}}],"line":35},"10":{"loc":{"start":{"line":43,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":51,"column":5}},{"start":{"line":43,"column":4},"end":{"line":51,"column":5}}],"line":43},"11":{"loc":{"start":{"line":46,"column":9},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":9},"end":{"line":51,"column":5}},{"start":{"line":46,"column":9},"end":{"line":51,"column":5}}],"line":46}},"s":{"0":1,"1":1,"2":2135,"3":2135,"4":10307,"5":10307,"6":2135,"7":8172,"8":611,"9":7561,"10":611,"11":6950,"12":611,"13":6339,"14":527,"15":5812,"16":2091,"17":3721,"18":978,"19":2743,"20":611,"21":2132,"22":1433,"23":699,"24":699,"25":2135,"26":1,"27":9465,"28":4689,"29":4776,"30":3784,"31":992,"32":1,"33":2135,"34":2135,"35":10307,"36":2135,"37":1},"f":{"0":2135,"1":9465,"2":2135},"b":{"0":[2135,8172],"1":[611,7561],"2":[611,6950],"3":[611,6339],"4":[527,5812],"5":[2091,3721],"6":[978,2743],"7":[611,2132],"8":[1433,699],"9":[699,0],"10":[4689,4776],"11":[3784,992]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectionHelpers.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectionHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["import SectionEntry from \"../controller/SectionEntry\";\nimport {Property} from \"./collectQuery\";\n\nexport function collectInsightResult(section: SectionEntry, resultCols: Set<string>): object {\n\tlet propertiesToAdd: Property[] = [];\n\tfor (let resultCol of resultCols) {\n\t\tlet keyField = resultCol.split(\"_\")[1];\n\t\tif (keyField === \"avg\") {\n\t\t\tpropertiesToAdd.push({key:resultCol, value: Number(section.get_avg())});\n\t\t} else if (keyField === \"pass\") {\n\t\t\tpropertiesToAdd.push({key:resultCol, value: Number(section.get_pass())});\n\t\t} else if (keyField === \"fail\") {\n\t\t\tpropertiesToAdd.push({key:resultCol, value: Number(section.get_fail())});\n\t\t} else if (keyField === \"audit\") {\n\t\t\tpropertiesToAdd.push({key:resultCol, value: Number(section.get_audit())});\n\t\t} else if (keyField === \"year\") {\n\t\t\tpropertiesToAdd.push({key:resultCol, value: Number(section.get_year())});\n\t\t} else if (keyField === \"dept\") {\n\t\t\tpropertiesToAdd.push({key:resultCol, value: String(section.get_dept())});\n\t\t} else if (keyField === \"id\") {\n\t\t\tpropertiesToAdd.push({key:resultCol, value: String(section.get_id())});\n\t\t} else if (keyField === \"instructor\") {\n\t\t\tpropertiesToAdd.push({key:resultCol, value: String(section.get_instructor())});\n\t\t} else if (keyField === \"title\") {\n\t\t\tpropertiesToAdd.push({key:resultCol, value: String(section.get_title())});\n\t\t} else if (keyField === \"uuid\") {\n\t\t\tpropertiesToAdd.push({key:resultCol, value: String(section.get_uuid())});\n\t\t}\n\t}\n\n\treturn convertArrayOfObjectToObject(propertiesToAdd);\n}\n\nexport function compare(val: string|number, val2: string|number) {\n\tif (val < val2) {\n\t\treturn -1;\n\t} else if (val > val2) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n\nexport function convertArrayOfObjectToObject(properties: Property[]): object {\n\tlet result: Record<string, string | number> = {};\n\tfor (let property of properties) {\n\t\tresult[property.key] = property.value;\n\t}\n\treturn result;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"934682b64454b199cb1fbdd43874fd781e74a5ab","contentHash":"34e9f98b518153a4ca84849b14fed81e95827e733f824646df01d1d7531c573e"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectAll.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectAll.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":6,"column":8},"end":{"line":6,"column":45}},"2":{"start":{"line":9,"column":30},"end":{"line":9,"column":32}},"3":{"start":{"line":10,"column":8},"end":{"line":16,"column":9}},"4":{"start":{"line":11,"column":12},"end":{"line":15,"column":13}},"5":{"start":{"line":12,"column":16},"end":{"line":14,"column":17}},"6":{"start":{"line":13,"column":20},"end":{"line":13,"column":50}},"7":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":32},"end":{"line":7,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":24},"end":{"line":18,"column":5}},"line":8}},"branchMap":{},"s":{"0":1,"1":231,"2":18,"3":18,"4":18,"5":106992,"6":1163016,"7":18,"8":1},"f":{"0":231,"1":18},"b":{},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectAll.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectAll.ts"],"names":[],"mappings":";;AAGA,MAAqB,UAAU;IACtB,cAAc,CAAyB;IAE/C,YAAY,cAAsC;QACjD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACtC,CAAC;IAEM,iBAAiB;QACvB,IAAI,eAAe,GAAmB,EAAE,CAAC;QAEzC,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,cAAc,EAAE;YACxC,KAAK,IAAI,MAAM,IAAI,OAAO,CAAC,WAAW,EAAE,EAAE;gBACzC,KAAK,IAAI,OAAO,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;oBACzC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC9B;aACD;SACD;QAED,OAAO,eAAe,CAAC;IACxB,CAAC;CAED;AArBD,6BAqBC","sourcesContent":["import SectionsDatasetEntry from \"../controller/SectionsDatasetEntry\";\nimport SectionEntry from \"../controller/SectionEntry\";\n\nexport default class CollectAll\t{\n\tprivate datasetEntries: SectionsDatasetEntry[];\n\n\tconstructor(datasetEntries: SectionsDatasetEntry[]) {\n\t\tthis.datasetEntries = datasetEntries;\n\t}\n\n\tpublic collectAllQueries(): SectionEntry[] {\n\t\tlet propertiesToAdd: SectionEntry[] = [];\n\n\t\tfor (let dataset of this.datasetEntries) {\n\t\t\tfor (let course of dataset.get_courses()) {\n\t\t\t\tfor (let section of course.getSections()) {\n\t\t\t\t\tpropertiesToAdd.push(section);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn propertiesToAdd;\n\t}\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e09aaeae973aea00439e453426c5391162ecb6a8","contentHash":"f3968daaacd4be70750102fa627c240f4ec04507a2eb68ad3c32ec2479527a7d"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectNegComp.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectNegComp.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":23},"end":{"line":6,"column":65}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":61}},"5":{"start":{"line":9,"column":21},"end":{"line":9,"column":23}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":45}},"7":{"start":{"line":14,"column":20},"end":{"line":14,"column":37}},"8":{"start":{"line":15,"column":31},"end":{"line":15,"column":33}},"9":{"start":{"line":16,"column":28},"end":{"line":16,"column":30}},"10":{"start":{"line":17,"column":27},"end":{"line":17,"column":83}},"11":{"start":{"line":18,"column":8},"end":{"line":18,"column":61}},"12":{"start":{"line":19,"column":22},"end":{"line":19,"column":67}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":52}},"14":{"start":{"line":21,"column":30},"end":{"line":21,"column":52}},"15":{"start":{"line":22,"column":36},"end":{"line":22,"column":45}},"16":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"17":{"start":{"line":24,"column":12},"end":{"line":24,"column":69}},"18":{"start":{"line":26,"column":8},"end":{"line":30,"column":9}},"19":{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},"20":{"start":{"line":28,"column":16},"end":{"line":28,"column":53}},"21":{"start":{"line":31,"column":8},"end":{"line":31,"column":52}},"22":{"start":{"line":35,"column":0},"end":{"line":35,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":32},"end":{"line":12,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":28},"end":{"line":33,"column":5}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},{"start":{"line":27,"column":12},"end":{"line":29,"column":13}}],"line":27}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":214,"6":214,"7":18,"8":18,"9":18,"10":18,"11":18,"12":17,"13":17,"14":17,"15":17,"16":17,"17":592694,"18":17,"19":1098404,"20":592694,"21":17,"22":1},"f":{"0":2,"1":214,"2":18},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[592694,505710]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectNegComp.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/services/collectNegComp.ts"],"names":[],"mappings":";;;;;AAEA,kEAA0C;AAC1C,8DAAsC;AAEtC,MAAqB,cAAc;IAC1B,cAAc,GAA2B,EAAE,CAAC;IAEpD,YAAY,cAAsC;QACjD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACtC,CAAC;IAEM,cAAc,CAAC,OAAe;QACpC,IAAI,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QAE9B,IAAI,gBAAgB,GAAmB,EAAE,CAAC;QAC1C,IAAI,aAAa,GAAmB,EAAE,CAAC;QAEvC,IAAI,YAAY,GAAG,IAAI,sBAAY,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAClE,gBAAgB,GAAG,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAKrD,IAAI,OAAO,GAAG,IAAI,oBAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAClD,aAAa,GAAG,OAAO,CAAC,iBAAiB,EAAE,CAAC;QAK5C,IAAI,eAAe,GAAG,IAAI,GAAG,CAAe,aAAa,CAAC,CAAC;QAK3D,IAAI,qBAAqB,GAAwB,IAAI,GAAG,EAAmB,CAAC;QAC5E,KAAK,IAAI,IAAI,IAAI,gBAAgB,EAAE;YAClC,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SACzD;QAKD,KAAK,IAAI,YAAY,IAAI,aAAa,EAAE;YACvC,IAAI,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;gBAC/D,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;aACrC;SACD;QAKD,OAAO,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC;QAAA,CAAC;IAC9C,CAAC;CACD;AAjDD,iCAiDC","sourcesContent":["import SectionsDatasetEntry from \"../controller/SectionsDatasetEntry\";\nimport SectionEntry from \"../controller/SectionEntry\";\nimport CollectQuery from \"./collectQuery\";\nimport CollectAll from \"./collectAll\";\n\nexport default class CollectNegComp {\n\tprivate datasetEntries: SectionsDatasetEntry[] = [];\n\n\tconstructor(datasetEntries: SectionsDatasetEntry[]) {\n\t\tthis.datasetEntries = datasetEntries;\n\t}\n\n\tpublic collectNegComp(negComp: object): SectionEntry[] {\n\t\tlet start = performance.now();\n\n\t\tlet propertyToNegate: SectionEntry[] = [];\n\t\tlet allProperties: SectionEntry[] = [];\n\n\t\tlet collectQuery = new CollectQuery(negComp, this.datasetEntries);\n\t\tpropertyToNegate = collectQuery.collectBody(negComp);\n\n\t\t// let end1 = performance.now();\n\t\t// console.log((end1 - start) / 1000);\n\n\t\tlet collect = new CollectAll(this.datasetEntries);\n\t\tallProperties = collect.collectAllQueries();\n\t\t//\n\t\t// let end2 = performance.now();\n\t\t// console.log((end2 - end1) / 1000);\n\n\t\tlet propertiesToAdd = new Set<SectionEntry>(allProperties);\n\n\t\t// let end3 = performance.now();\n\t\t// console.log((end3 - end2) / 1000);\n\n\t\tlet propertyToNegateUuids: Map<string,boolean> = new Map<string, boolean>();\n\t\tfor (let prop of propertyToNegate) {\n\t\t\tpropertyToNegateUuids.set(String(prop.get_uuid()), true);\n\t\t}\n\n\t\t// let end4 = performance.now();\n\t\t// console.log((end4 - end3) / 1000);\n\n\t\tfor (let sectionEntry of allProperties) {\n\t\t\tif (propertyToNegateUuids.has(String(sectionEntry.get_uuid()))) {\n\t\t\t\tpropertiesToAdd.delete(sectionEntry);\n\t\t\t}\n\t\t}\n\n\t\t// let end5 = performance.now();\n\t\t// console.log((end5 - end4) / 1000);\n\n\t\treturn Array.from(propertiesToAdd.values());;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"22a6e7fa2e2b101cb11fc26c668a73d3bbceb50a","contentHash":"9d1ca8acf7418e46ac34e896f5397920719b6cc33c8798193f69ec885193067b"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/validateDataset.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/validateDataset.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":31},"end":{"line":7,"column":81}},"5":{"start":{"line":11,"column":29},"end":{"line":11,"column":46}},"6":{"start":{"line":12,"column":28},"end":{"line":12,"column":53}},"7":{"start":{"line":13,"column":29},"end":{"line":13,"column":51}},"8":{"start":{"line":14,"column":28},"end":{"line":14,"column":52}},"9":{"start":{"line":15,"column":30},"end":{"line":15,"column":43}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":84}},"11":{"start":{"line":19,"column":8},"end":{"line":33,"column":9}},"12":{"start":{"line":20,"column":34},"end":{"line":20,"column":70}},"13":{"start":{"line":21,"column":12},"end":{"line":29,"column":13}},"14":{"start":{"line":22,"column":16},"end":{"line":22,"column":76}},"15":{"start":{"line":23,"column":28},"end":{"line":23,"column":66}},"16":{"start":{"line":24,"column":16},"end":{"line":24,"column":49}},"17":{"start":{"line":25,"column":16},"end":{"line":25,"column":46}},"18":{"start":{"line":28,"column":16},"end":{"line":28,"column":46}},"19":{"start":{"line":31,"column":13},"end":{"line":33,"column":9}},"20":{"start":{"line":32,"column":12},"end":{"line":32,"column":42}},"21":{"start":{"line":34,"column":8},"end":{"line":34,"column":38}},"22":{"start":{"line":37,"column":8},"end":{"line":37,"column":31}},"23":{"start":{"line":40,"column":8},"end":{"line":40,"column":28}},"24":{"start":{"line":43,"column":8},"end":{"line":43,"column":21}},"25":{"start":{"line":46,"column":0},"end":{"line":46,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":31},"end":{"line":17,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":45},"end":{"line":35,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":24},"end":{"line":38,"column":5}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":22},"end":{"line":41,"column":5}},"line":39},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":34},"end":{"line":44,"column":5}},"line":42}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":16,"column":15},"end":{"line":16,"column":83}},"type":"binary-expr","locations":[{"start":{"line":16,"column":15},"end":{"line":16,"column":29}},{"start":{"line":16,"column":33},"end":{"line":16,"column":47}},{"start":{"line":16,"column":51},"end":{"line":16,"column":64}},{"start":{"line":16,"column":68},"end":{"line":16,"column":83}}],"line":16},"4":{"loc":{"start":{"line":19,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":33,"column":9}},{"start":{"line":19,"column":8},"end":{"line":33,"column":9}}],"line":19},"5":{"loc":{"start":{"line":31,"column":13},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":13},"end":{"line":33,"column":9}},{"start":{"line":31,"column":13},"end":{"line":33,"column":9}}],"line":31}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":35,"6":35,"7":35,"8":35,"9":35,"10":35,"11":29,"12":29,"13":29,"14":29,"15":26,"16":26,"17":26,"18":3,"19":0,"20":0,"21":0,"22":26,"23":23,"24":0,"25":1},"f":{"0":1,"1":35,"2":29,"3":26,"4":23,"5":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[35,32,29,29],"4":[29,0],"5":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/validateDataset.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/validateDataset.ts"],"names":[],"mappings":";;;;;AAAA,qDAAqD;AAErD,kFAA0D;AAG1D,MAAqB,eAAe;IAC5B,OAAO,CAA2B;IAElC,UAAU,CAAC,EAAU,EAAE,UAAoB;QAWjD,IAAI,cAAc,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,aAAa,GAAG,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC;QAC9C,IAAI,cAAc,GAAG,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,aAAa,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,eAAe,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;QAEpC,OAAO,cAAc,IAAI,cAAc,IAAI,aAAa,IAAI,eAAe,CAAC;IAE7E,CAAC;IAEM,KAAK,CAAC,eAAe,CAAC,EAAU,EAAE,OAAe,EAAE,IAAwB;QAcjF,IAAI,IAAI,KAAK,mCAAkB,CAAC,QAAQ,EAAE;YACzC,IAAI,eAAe,GAAG,IAAI,8BAAoB,EAAE,CAAC;YACjD,IAAI;gBACH,MAAM,eAAe,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;gBAC5D,IAAI,KAAK,GAAG,eAAe,CAAC,oBAAoB,EAAE,CAAC;gBACnD,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;gBACjC,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC9B;YAAC,MAAM;gBACP,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC9B;SACD;aAAM,IAAI,IAAI,KAAK,mCAAkB,CAAC,KAAK,EAAE;YAE7C,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAC9B;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAEM,UAAU,CAAC,OAAqB;QACtC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;IAEM,eAAe;QACrB,OAAO,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAEO,oBAAoB,CAAC,OAAe;QAI3C,OAAO,KAAK,CAAC;IACd,CAAC;CACD;AArED,kCAqEC","sourcesContent":["import {InsightDatasetKind,} from \"./IInsightFacade\";\nimport {DatasetEntry} from \"./DatasetEntry\";\nimport SectionsDatasetEntry from \"./SectionsDatasetEntry\";\nimport DatasetManager from \"./DatasetManager\";\n\nexport default class ValidateDataset {\n\tpublic dataset: DatasetEntry | undefined;\n\n\tpublic validateId(id: string, datasetIds: string[]): boolean {\n\t\t/*\n\t\tA valid ID is an idstring:\n\t\t- An ID that is only whitespace is invalid\n\t\t- idString: [^_]+ // one or more of any character, except underscore.\n\t\t- Must also be rejected if there is already a dataset containing name.\n\n\t\tRETURNS:\n\t\t- True if ID is valid\n\t\t- False if ID is invalid\n\t\t */\n\t\tlet underscoreTest = !id.includes(\"_\");\n\t\tlet whitespaceExp = new RegExp(\"(?=[^\\\\s]+)\");\n\t\tlet whitespaceTest = whitespaceExp.test(id);\n\t\tlet duplicateTest = !datasetIds.includes(id);\n\t\tlet emptyStringTest = id.length > 0;\n\n\t\treturn underscoreTest && whitespaceTest && duplicateTest && emptyStringTest;\n\n\t}\n\n\tpublic async validateContent(id: string, content: string, kind: InsightDatasetKind): Promise<boolean> {\n\t\t/*\n\t\tASSUME: kind is a valid InsightDatasetKind argument.\n\n\t\tIf kind is Rooms:\n\t\t- Validate according to RoomsValidation\n\n\t\tif kind is Sections:\n\t\t- Validate according to SectionsValidation\n\n\t\tRETURNS:\n\t\t- True if the corresponding validation function returns true\n\t\t- False otherwise.\n\t\t */\n\t\tif (kind === InsightDatasetKind.Sections) {\n\t\t\tlet sectionsDataset = new SectionsDatasetEntry();\n\t\t\ttry {\n\t\t\t\tawait sectionsDataset.createDatasetEntry(id, content, kind);\n\t\t\t\tlet valid = sectionsDataset.validateDatasetEntry();\n\t\t\t\tthis.setDataset(sectionsDataset);\n\t\t\t\treturn Promise.resolve(valid);\n\t\t\t} catch {\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\t\t} else if (kind === InsightDatasetKind.Rooms) {\n\t\t\t// TODO: Implementation\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\treturn Promise.resolve(false);\n\t}\n\n\tpublic setDataset(dataset: DatasetEntry): void {\n\t\tthis.dataset = dataset;\n\t}\n\n\tpublic getValidDataset(): DatasetEntry | undefined {\n\t\treturn this.dataset;\n\t}\n\n\tprivate validateRoomsDataset(content: string): boolean {\n\t\t/*\n\n\t\t */\n\t\treturn false;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fb2a62c677f95b642ac60ae67c95d1c776d50cf4","contentHash":"4d435962415f16203424e84bac921255c0f3c7361e5d037280bf88fa1cc83be1"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/SectionsDatasetEntry.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/SectionsDatasetEntry.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":22},"end":{"line":6,"column":63}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":52}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":49}},"6":{"start":{"line":9,"column":19},"end":{"line":9,"column":55}},"7":{"start":{"line":11,"column":9},"end":{"line":11,"column":11}},"8":{"start":{"line":12,"column":14},"end":{"line":12,"column":15}},"9":{"start":{"line":13,"column":11},"end":{"line":13,"column":55}},"10":{"start":{"line":14,"column":14},"end":{"line":14,"column":16}},"11":{"start":{"line":16,"column":8},"end":{"line":20,"column":9}},"12":{"start":{"line":17,"column":12},"end":{"line":19,"column":13}},"13":{"start":{"line":18,"column":16},"end":{"line":18,"column":28}},"14":{"start":{"line":21,"column":8},"end":{"line":21,"column":21}},"15":{"start":{"line":24,"column":8},"end":{"line":24,"column":31}},"16":{"start":{"line":25,"column":8},"end":{"line":25,"column":42}},"17":{"start":{"line":26,"column":8},"end":{"line":26,"column":35}},"18":{"start":{"line":27,"column":22},"end":{"line":27,"column":37}},"19":{"start":{"line":28,"column":28},"end":{"line":28,"column":30}},"20":{"start":{"line":29,"column":8},"end":{"line":33,"column":9}},"21":{"start":{"line":30,"column":32},"end":{"line":30,"column":59}},"22":{"start":{"line":31,"column":12},"end":{"line":31,"column":44}},"23":{"start":{"line":32,"column":12},"end":{"line":32,"column":44}},"24":{"start":{"line":34,"column":8},"end":{"line":34,"column":39}},"25":{"start":{"line":35,"column":8},"end":{"line":35,"column":20}},"26":{"start":{"line":38,"column":18},"end":{"line":38,"column":39}},"27":{"start":{"line":39,"column":25},"end":{"line":39,"column":27}},"28":{"start":{"line":40,"column":8},"end":{"line":63,"column":11}},"29":{"start":{"line":41,"column":12},"end":{"line":62,"column":13}},"30":{"start":{"line":42,"column":32},"end":{"line":42,"column":68}},"31":{"start":{"line":43,"column":44},"end":{"line":43,"column":46}},"32":{"start":{"line":44,"column":16},"end":{"line":46,"column":17}},"33":{"start":{"line":45,"column":20},"end":{"line":45,"column":78}},"34":{"start":{"line":47,"column":16},"end":{"line":58,"column":17}},"35":{"start":{"line":48,"column":34},"end":{"line":48,"column":36}},"36":{"start":{"line":49,"column":20},"end":{"line":56,"column":21}},"37":{"start":{"line":50,"column":35},"end":{"line":50,"column":53}},"38":{"start":{"line":51,"column":24},"end":{"line":55,"column":25}},"39":{"start":{"line":52,"column":41},"end":{"line":52,"column":68}},"40":{"start":{"line":53,"column":41},"end":{"line":53,"column":75}},"41":{"start":{"line":54,"column":28},"end":{"line":54,"column":49}},"42":{"start":{"line":57,"column":20},"end":{"line":57,"column":60}},"43":{"start":{"line":61,"column":16},"end":{"line":61,"column":89}},"44":{"start":{"line":64,"column":8},"end":{"line":64,"column":43}},"45":{"start":{"line":67,"column":8},"end":{"line":67,"column":31}},"46":{"start":{"line":70,"column":8},"end":{"line":70,"column":21}},"47":{"start":{"line":73,"column":8},"end":{"line":73,"column":25}},"48":{"start":{"line":76,"column":8},"end":{"line":84,"column":9}},"49":{"start":{"line":77,"column":12},"end":{"line":77,"column":27}},"50":{"start":{"line":78,"column":12},"end":{"line":78,"column":31}},"51":{"start":{"line":79,"column":26},"end":{"line":79,"column":54}},"52":{"start":{"line":80,"column":12},"end":{"line":80,"column":37}},"53":{"start":{"line":83,"column":12},"end":{"line":83,"column":63}},"54":{"start":{"line":85,"column":8},"end":{"line":85,"column":37}},"55":{"start":{"line":88,"column":8},"end":{"line":88,"column":28}},"56":{"start":{"line":91,"column":8},"end":{"line":91,"column":23}},"57":{"start":{"line":94,"column":22},"end":{"line":94,"column":58}},"58":{"start":{"line":95,"column":22},"end":{"line":95,"column":42}},"59":{"start":{"line":96,"column":8},"end":{"line":104,"column":9}},"60":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"61":{"start":{"line":98,"column":16},"end":{"line":98,"column":57}},"62":{"start":{"line":100,"column":12},"end":{"line":100,"column":74}},"63":{"start":{"line":103,"column":12},"end":{"line":103,"column":109}},"64":{"start":{"line":105,"column":8},"end":{"line":105,"column":33}},"65":{"start":{"line":108,"column":8},"end":{"line":112,"column":10}},"66":{"start":{"line":115,"column":8},"end":{"line":115,"column":32}},"67":{"start":{"line":118,"column":26},"end":{"line":120,"column":53}},"68":{"start":{"line":119,"column":12},"end":{"line":119,"column":47}},"69":{"start":{"line":120,"column":36},"end":{"line":120,"column":49}},"70":{"start":{"line":121,"column":8},"end":{"line":121,"column":38}},"71":{"start":{"line":122,"column":8},"end":{"line":122,"column":28}},"72":{"start":{"line":125,"column":8},"end":{"line":125,"column":25}},"73":{"start":{"line":128,"column":0},"end":{"line":128,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":27},"end":{"line":22,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":29},"end":{"line":36,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":28},"end":{"line":65,"column":5}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":60},"end":{"line":40,"column":61}},"loc":{"start":{"line":40,"column":89},"end":{"line":63,"column":9}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":24},"end":{"line":68,"column":5}},"line":66},"6":{"name":"(anonymous_6)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":14},"end":{"line":71,"column":5}},"line":69},"7":{"name":"(anonymous_7)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":18},"end":{"line":74,"column":5}},"line":72},"8":{"name":"(anonymous_8)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":48},"end":{"line":86,"column":5}},"line":75},"9":{"name":"(anonymous_9)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":18},"end":{"line":89,"column":5}},"line":87},"10":{"name":"(anonymous_10)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":13},"end":{"line":92,"column":5}},"line":90},"11":{"name":"(anonymous_11)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":28},"end":{"line":106,"column":5}},"line":93},"12":{"name":"(anonymous_12)","decl":{"start":{"line":107,"column":4},"end":{"line":107,"column":5}},"loc":{"start":{"line":107,"column":27},"end":{"line":113,"column":5}},"line":107},"13":{"name":"(anonymous_13)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":26},"end":{"line":116,"column":5}},"line":114},"14":{"name":"(anonymous_14)","decl":{"start":{"line":117,"column":4},"end":{"line":117,"column":5}},"loc":{"start":{"line":117,"column":18},"end":{"line":123,"column":5}},"line":117},"15":{"name":"(anonymous_15)","decl":{"start":{"line":118,"column":49},"end":{"line":118,"column":50}},"loc":{"start":{"line":118,"column":67},"end":{"line":120,"column":9}},"line":118},"16":{"name":"(anonymous_16)","decl":{"start":{"line":120,"column":18},"end":{"line":120,"column":19}},"loc":{"start":{"line":120,"column":36},"end":{"line":120,"column":49}},"line":120},"17":{"name":"(anonymous_17)","decl":{"start":{"line":124,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":124,"column":15},"end":{"line":126,"column":5}},"line":124}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":17,"column":12},"end":{"line":19,"column":13}},"type":"if","locations":[{"start":{"line":17,"column":12},"end":{"line":19,"column":13}},{"start":{"line":17,"column":12},"end":{"line":19,"column":13}}],"line":17},"4":{"loc":{"start":{"line":47,"column":16},"end":{"line":58,"column":17}},"type":"if","locations":[{"start":{"line":47,"column":16},"end":{"line":58,"column":17}},{"start":{"line":47,"column":16},"end":{"line":58,"column":17}}],"line":47},"5":{"loc":{"start":{"line":51,"column":24},"end":{"line":55,"column":25}},"type":"if","locations":[{"start":{"line":51,"column":24},"end":{"line":55,"column":25}},{"start":{"line":51,"column":24},"end":{"line":55,"column":25}}],"line":51},"6":{"loc":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},{"start":{"line":97,"column":12},"end":{"line":99,"column":13}}],"line":97}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":170,"8":170,"9":170,"10":170,"11":26,"12":26,"13":23,"14":3,"15":141,"16":141,"17":141,"18":141,"19":141,"20":141,"21":838104,"22":838104,"23":838104,"24":141,"25":141,"26":29,"27":29,"28":29,"29":28,"30":28,"31":28,"32":28,"33":13276,"34":28,"35":27,"36":27,"37":13262,"38":13262,"39":13261,"40":13261,"41":13261,"42":27,"43":2,"44":26,"45":167,"46":170,"47":170,"48":29,"49":29,"50":29,"51":29,"52":26,"53":3,"54":26,"55":191,"56":204,"57":23,"58":23,"59":23,"60":23,"61":15,"62":23,"63":0,"64":23,"65":23,"66":164,"67":23,"68":13256,"69":13256,"70":23,"71":23,"72":23,"73":1},"f":{"0":3,"1":26,"2":141,"3":29,"4":28,"5":167,"6":170,"7":170,"8":29,"9":191,"10":204,"11":23,"12":23,"13":164,"14":23,"15":13256,"16":13256,"17":23},"b":{"0":[1,1,1],"1":[1,2],"2":[3,3],"3":[23,3],"4":[27,1],"5":[13261,1],"6":[15,8]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/SectionsDatasetEntry.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/SectionsDatasetEntry.ts"],"names":[],"mappings":"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","sourcesContent":["import {DatasetEntry} from \"./DatasetEntry\";\nimport CourseEntry from \"./CourseEntry\";\nimport {InsightDataset, InsightDatasetKind, InsightError} from \"./IInsightFacade\";\nimport JSZip from \"jszip\";\nimport fs from \"fs-extra\";\n\n\nexport default class SectionsDatasetEntry implements DatasetEntry {\n\n\tpublic id: string = \"\";\n\tpublic numRows: number = 0;\n\tpublic kind: InsightDatasetKind = InsightDatasetKind.Sections;\n\tpublic courses: CourseEntry[] = [];\n\n\tpublic validateDatasetEntry(): boolean {\n\t\t/*\n\t\tContent is an entire zip file. Should use JSZip file to unzip, navigate through,\n\t\tview files inside.\n\n\t\tA valid dataset:\n\t\t- Is a zip file\n\t\t- Contains at least one valid section (ie. has at least one valid course)\n\n\t\tIf this is a valid DatasetEntry:\n\t\t- Populate rest of fields\n\t\t- Save to disk\n\n\t\t// TODO: Section validator\n\n\t\tRETURNS:\n\t\t- True if the sections dataset is valid\n\t\t- False otherwise\n\t\t */\n\t\tfor (const course of this.courses) {\n\t\t\tif (course.findValidSection()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic JSONToDatasetEntry(json: any): SectionsDatasetEntry {\n\t\t/*\n\t\tReturns a SectionsDatasetEntry from the JSON.\n\t\t */\n\t\tthis.setId(json[\"id\"]);\n\t\tthis.set_numRows(json[\"numRows\"]);\n\t\tthis.setKind(json[\"kind\"]);\n\n\t\tlet courses = json[\"courses\"];\n\t\tlet courseEntries: CourseEntry[] = [];\n\t\tfor (const course of courses){\n\t\t\tconst courseEntry = new CourseEntry();\n\t\t\tcourseEntry.JSONToEntry(course);\n\t\t\tcourseEntries.push(courseEntry);\n\t\t}\n\n\t\tthis.setCourses(courseEntries);\n\n\t\treturn this;\n\t}\n\n\tprivate async parseZip(content: string): Promise<CourseEntry[]> {\n\t\t/*\n\t\tParses zip file using JSZip.\n\n\t\tTurns Zip file into a SectionsDatasetEntry if possible.\n\t\t- If not possible, then throws an InsightError.\n\t\t- If not valid zip file, throws InsightError\n\n\t\tIf there exists a \"courses/\" directory in zip's root directory:\n\t\t- Iterate through files and create CourseEntries if they can be created.\n\t\t- Else throw error and skip to the next one.\n\t\t */\n\t\tlet zip = new JSZip();\n\t\tlet courseList: CourseEntry[] = [];\n\t\tawait zip.loadAsync(content, {base64: true}).then(async (unzipped_contents) => {\n\t\t\ttry {\n\t\t\t\tlet filenames = Object.keys(unzipped_contents.files);\n\t\t\t\tlet filenameCourseContent: boolean[] = [];\n\n\t\t\t\tfor (const filename of filenames) {\n\t\t\t\t\tfilenameCourseContent.push(filename.includes(\"courses/\"));\n\t\t\t\t}\n\n\t\t\t\tif (filenameCourseContent.includes(true)) {\n\t\t\t\t\tlet courses: Array<Promise<CourseEntry>> = [];\n\t\t\t\t\tfor (const filename of Object.keys(unzipped_contents.files)) {\n\t\t\t\t\t\tlet file = zip.file(filename);\n\t\t\t\t\t\tif (file != null) {\n\t\t\t\t\t\t\tlet course = new CourseEntry();\n\t\t\t\t\t\t\tlet result = course.parseCourse(file, filename);\n\t\t\t\t\t\t\tcourses.push(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcourseList = await Promise.all(courses);\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tthrow new InsightError(\"Unable to parse dataset entry\");\n\t\t\t}\n\t\t});\n\t\treturn Promise.resolve(courseList);\n\t}\n\n\tpublic setCourses(courses: CourseEntry[]){\n\t\tthis.courses = courses;\n\t}\n\n\tpublic setId(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tpublic setKind(kind: InsightDatasetKind) {\n\t\tthis.kind = kind;\n\t}\n\n\tpublic async createDatasetEntry(id: string, content: string, kind: InsightDatasetKind): Promise<DatasetEntry> {\n\t\t/*\n\t\tCreates a SectionsDatasetEntry using the content given.\n\t\tIf creating is impossible, then it throws an error.\n\n\t\tSteps:\n\t\t1. Decode the zip file.\n\n\t\t */\n\t\ttry {\n\t\t\tthis.setId(id);\n\t\t\tthis.setKind(kind);\n\t\t\tlet courses = await this.parseZip(content);\n\t\t\tthis.setCourses(courses);\n\t\t} catch {\n\t\t\treturn Promise.reject(\"Could not parse zip file.\");\n\t\t}\n\t\treturn Promise.resolve(this);\n\t}\n\n\tpublic get_courses() {\n\t\treturn this.courses;\n\t}\n\n\tpublic get_id() {\n\t\treturn this.id;\n\t}\n\n\tpublic async saveDataset(path: string): Promise<void> {\n\t\tlet saveDir = path + \"/\" + this.get_id() + \".json\";\n\t\tlet content = JSON.stringify(this);\n\t\ttry {\n\t\t\tif (!fs.existsSync(path + \"/\")){\n\t\t\t\tfs.mkdirSync(path + \"/\");\n\t\t\t}\n\t\t\tawait fs.writeJSON(saveDir, content, \"utf-8\");\n\t\t} catch(err) {\n\t\t\treturn Promise.reject(new InsightError(\"Could not write new dataset to file.\"));\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic createInsightDataset(): InsightDataset {\n\t\treturn {\n\t\t\tid: this.get_id(),\n\t\t\tkind: this.get_kind(),\n\t\t\tnumRows: this.get_numRows(),\n\t\t};\n\t}\n\n\tprivate set_numRows(num_rows: number){\n\t\tthis.numRows = num_rows;\n\t}\n\n\tprivate get_numRows() {\n\t\tlet numSections = this.get_courses().map(function(course) {\n\t\t\treturn course.getSections().length;\n\t\t}).reduce((sum, current) => sum + current, 0);\n\t\tthis.set_numRows(numSections);\n\n\t\treturn this.numRows;\n\t}\n\n\tprivate get_kind() {\n\t\treturn this.kind;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"453627f4b7661e452633db66fea4d408aefbfd60","contentHash":"0f40a8fc13a81d343b04aac197ba2e04d9325a969acc12eda28651dbf3e3b128"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/CourseEntry.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/CourseEntry.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":23},"end":{"line":6,"column":65}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":52}},"5":{"start":{"line":9,"column":15},"end":{"line":9,"column":17}},"6":{"start":{"line":10,"column":17},"end":{"line":10,"column":19}},"7":{"start":{"line":12,"column":8},"end":{"line":21,"column":9}},"8":{"start":{"line":13,"column":12},"end":{"line":20,"column":15}},"9":{"start":{"line":14,"column":16},"end":{"line":19,"column":17}},"10":{"start":{"line":15,"column":20},"end":{"line":15,"column":69}},"11":{"start":{"line":18,"column":20},"end":{"line":18,"column":81}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":37}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":40}},"14":{"start":{"line":28,"column":8},"end":{"line":43,"column":9}},"15":{"start":{"line":29,"column":12},"end":{"line":29,"column":43}},"16":{"start":{"line":30,"column":30},"end":{"line":30,"column":53}},"17":{"start":{"line":31,"column":12},"end":{"line":39,"column":13}},"18":{"start":{"line":32,"column":16},"end":{"line":38,"column":17}},"19":{"start":{"line":33,"column":34},"end":{"line":33,"column":62}},"20":{"start":{"line":34,"column":20},"end":{"line":34,"column":52}},"21":{"start":{"line":35,"column":20},"end":{"line":35,"column":45}},"22":{"start":{"line":42,"column":12},"end":{"line":42,"column":83}},"23":{"start":{"line":46,"column":8},"end":{"line":46,"column":37}},"24":{"start":{"line":49,"column":8},"end":{"line":49,"column":36}},"25":{"start":{"line":50,"column":8},"end":{"line":50,"column":15}},"26":{"start":{"line":53,"column":8},"end":{"line":53,"column":29}},"27":{"start":{"line":56,"column":8},"end":{"line":56,"column":33}},"28":{"start":{"line":59,"column":8},"end":{"line":59,"column":41}},"29":{"start":{"line":60,"column":23},"end":{"line":60,"column":39}},"30":{"start":{"line":61,"column":29},"end":{"line":61,"column":31}},"31":{"start":{"line":62,"column":8},"end":{"line":66,"column":9}},"32":{"start":{"line":63,"column":33},"end":{"line":63,"column":61}},"33":{"start":{"line":64,"column":12},"end":{"line":64,"column":50}},"34":{"start":{"line":65,"column":12},"end":{"line":65,"column":46}},"35":{"start":{"line":67,"column":8},"end":{"line":67,"column":41}},"36":{"start":{"line":68,"column":8},"end":{"line":68,"column":20}},"37":{"start":{"line":71,"column":0},"end":{"line":71,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":38},"end":{"line":23,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":42},"end":{"line":13,"column":43}},"loc":{"start":{"line":13,"column":52},"end":{"line":20,"column":13}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":23},"end":{"line":26,"column":5}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":44},"end":{"line":44,"column":5}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":30},"end":{"line":47,"column":5}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":24},"end":{"line":51,"column":5}},"line":48},"7":{"name":"(anonymous_7)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":18},"end":{"line":54,"column":5}},"line":52},"8":{"name":"(anonymous_8)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":26},"end":{"line":57,"column":5}},"line":55},"9":{"name":"(anonymous_9)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":22},"end":{"line":69,"column":5}},"line":58}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":12,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":21,"column":9}},{"start":{"line":12,"column":8},"end":{"line":21,"column":9}}],"line":12}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":851365,"6":851365,"7":13261,"8":13261,"9":13261,"10":13261,"11":3,"12":13258,"13":26,"14":13261,"15":13261,"16":13261,"17":13259,"18":159982,"19":159982,"20":159982,"21":159980,"22":3,"23":851365,"24":159980,"25":159980,"26":1011848,"27":838104,"28":838104,"29":838104,"30":838104,"31":838104,"32":9110292,"33":9110292,"34":9110292,"35":838104,"36":838104,"37":1},"f":{"0":1,"1":13261,"2":13261,"3":26,"4":13261,"5":851365,"6":159980,"7":1011848,"8":838104,"9":838104},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[13261,0]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/CourseEntry.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/CourseEntry.ts"],"names":[],"mappings":";;;;;AAAA,kEAA0C;AAE1C,qDAA8C;AAE9C,MAAqB,WAAW;IAExB,QAAQ,GAAmB,EAAE,CAAC;IAC9B,UAAU,GAAW,EAAE,CAAC;IAExB,KAAK,CAAC,WAAW,CAAC,IAA8B,EAAE,QAAgB;QAOxE,IAAI,IAAI,IAAI,IAAI,EAAE;YACjB,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;gBAC3C,IAAI;oBACH,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;iBACjD;gBAAC,MAAM;oBACP,MAAM,IAAI,6BAAY,CAAC,mBAAmB,CAAC,CAAC;iBAC5C;YACF,CAAC,CAAC,CAAC;SACH;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEM,gBAAgB;QAQtB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IACjC,CAAC;IAEO,cAAc,CAAC,WAAgB,EAAE,UAAkB;QAC1D,IAAI;YACH,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YAC/B,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAC1C,KAAK,MAAM,MAAM,IAAI,WAAW,CAAC,QAAQ,CAAC,EAAC;gBAC1C,IAAI;oBACH,IAAI,OAAO,GAAG,IAAI,sBAAY,EAAE,CAAC;oBACjC,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;oBAChC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBACzB;gBAAC,MAAM;iBAEP;aACD;SACD;QAAC,MAAM;YACP,MAAM,IAAI,6BAAY,CAAC,6BAA6B,CAAC,CAAC;SACtD;IACF,CAAC;IAEO,aAAa,CAAC,UAAkB;QACvC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC9B,CAAC;IAEO,UAAU,CAAC,OAAqB;QACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,OAAO;IACR,CAAC;IAEM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEM,WAAW,CAAC,QAAwB;QAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC1B,CAAC;IAEM,WAAW,CAAC,IAAS;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAEjC,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QAChC,IAAI,cAAc,GAAG,EAAE,CAAC;QACxB,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;YAC/B,MAAM,YAAY,GAAG,IAAI,sBAAY,EAAE,CAAC;YACxC,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YACtC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAClC;QAED,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAEjC,OAAO,IAAI,CAAC;IACb,CAAC;CACD;AArFD,8BAqFC","sourcesContent":["import SectionEntry from \"./SectionEntry\";\nimport JSZip from \"jszip\";\nimport {InsightError} from \"./IInsightFacade\";\n\nexport default class CourseEntry {\n\n\tpublic sections: SectionEntry[] = [];\n\tpublic courseName: string = \"\";\n\n\tpublic async parseCourse(file: JSZip.JSZipObject | null, filename: string): Promise<CourseEntry> {\n\t\t/*\n\t\tParses a course from a JSZip representation.\n\n\t\tIterate through sections in the file and attempts to create sectionEntries if\n\t\tthey can be created. Else throw error and skip to the next one.\n\t\t */\n\t\tif (file != null) {\n\t\t\tawait file.async(\"text\").then((body: any) => {\n\t\t\t\ttry {\n\t\t\t\t\tthis.courseFromJSON(body, filename.substring(8));\n\t\t\t\t} catch {\n\t\t\t\t\tthrow new InsightError(\"Course is invalid\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(this);\n\t}\n\n\tpublic findValidSection(): boolean {\n\t\t/*\n\t\tIterate through all sections to find a valid section.\n\n\t\tRETURNS:\n\t\t- True if a valid section can be found\n\t\t- False otherwise.\n\t\t */\n\t\treturn this.sections.length > 0;\n\t}\n\n\tprivate courseFromJSON(sectionData: any, courseName: string) {\n\t\ttry {\n\t\t\tthis.setCourseName(courseName);\n\t\t\tlet sectionJSON = JSON.parse(sectionData);\n\t\t\tfor (const result of sectionJSON[\"result\"]){\n\t\t\t\ttry {\n\t\t\t\t\tlet section = new SectionEntry();\n\t\t\t\t\tsection.sectionFromJSON(result);\n\t\t\t\t\tthis.addSection(section);\n\t\t\t\t} catch {\n\t\t\t\t\t// continue\n\t\t\t\t}\n\t\t\t}\n\t\t} catch {\n\t\t\tthrow new InsightError(\"An invalid JSON was passed.\");\n\t\t}\n\t}\n\n\tprivate setCourseName(courseName: string) {\n\t\tthis.courseName = courseName;\n\t}\n\n\tprivate addSection(section: SectionEntry) {\n\t\tthis.sections.push(section);\n\t\treturn;\n\t}\n\n\tpublic getSections() {\n\t\treturn this.sections;\n\t}\n\n\tpublic setSections(sections: SectionEntry[]) {\n\t\tthis.sections = sections;\n\t}\n\n\tpublic JSONToEntry(json: any): CourseEntry {\n\t\tthis.setCourseName(json[\"name\"]);\n\n\t\tlet sections = json[\"sections\"];\n\t\tlet sectionEntries = [];\n\t\tfor (const section of sections) {\n\t\t\tconst sectionEntry = new SectionEntry();\n\t\t\tsectionEntry.sectionFromDisk(section);\n\t\t\tsectionEntries.push(sectionEntry);\n\t\t}\n\n\t\tthis.setSections(sectionEntries);\n\n\t\treturn this;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"058043d3c95cc0b70da55589b118bb930dafcbed","contentHash":"5d08f33d6f10c4becab473cd24f8966df2ce4a6f7b8ced0375ee2c850f924af6"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/SectionEntry.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/SectionEntry.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":5,"column":11},"end":{"line":5,"column":13}},"3":{"start":{"line":6,"column":9},"end":{"line":6,"column":11}},"4":{"start":{"line":7,"column":12},"end":{"line":7,"column":14}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":19}},"6":{"start":{"line":9,"column":11},"end":{"line":9,"column":13}},"7":{"start":{"line":10,"column":11},"end":{"line":10,"column":15}},"8":{"start":{"line":11,"column":10},"end":{"line":11,"column":14}},"9":{"start":{"line":12,"column":11},"end":{"line":12,"column":15}},"10":{"start":{"line":13,"column":11},"end":{"line":13,"column":15}},"11":{"start":{"line":14,"column":12},"end":{"line":14,"column":16}},"12":{"start":{"line":16,"column":19},"end":{"line":16,"column":43}},"13":{"start":{"line":17,"column":27},"end":{"line":17,"column":116}},"14":{"start":{"line":18,"column":28},"end":{"line":18,"column":77}},"15":{"start":{"line":18,"column":57},"end":{"line":18,"column":76}},"16":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"17":{"start":{"line":20,"column":12},"end":{"line":20,"column":84}},"18":{"start":{"line":22,"column":8},"end":{"line":22,"column":41}},"19":{"start":{"line":23,"column":8},"end":{"line":23,"column":43}},"20":{"start":{"line":24,"column":8},"end":{"line":24,"column":45}},"21":{"start":{"line":25,"column":8},"end":{"line":25,"column":54}},"22":{"start":{"line":26,"column":8},"end":{"line":26,"column":46}},"23":{"start":{"line":27,"column":8},"end":{"line":27,"column":70}},"24":{"start":{"line":28,"column":8},"end":{"line":28,"column":41}},"25":{"start":{"line":29,"column":8},"end":{"line":29,"column":43}},"26":{"start":{"line":30,"column":8},"end":{"line":30,"column":43}},"27":{"start":{"line":31,"column":8},"end":{"line":31,"column":45}},"28":{"start":{"line":34,"column":8},"end":{"line":34,"column":45}},"29":{"start":{"line":35,"column":8},"end":{"line":35,"column":41}},"30":{"start":{"line":36,"column":8},"end":{"line":36,"column":47}},"31":{"start":{"line":37,"column":8},"end":{"line":37,"column":57}},"32":{"start":{"line":38,"column":8},"end":{"line":38,"column":45}},"33":{"start":{"line":39,"column":8},"end":{"line":39,"column":60}},"34":{"start":{"line":40,"column":8},"end":{"line":40,"column":43}},"35":{"start":{"line":41,"column":8},"end":{"line":41,"column":45}},"36":{"start":{"line":42,"column":8},"end":{"line":42,"column":45}},"37":{"start":{"line":43,"column":8},"end":{"line":43,"column":47}},"38":{"start":{"line":46,"column":8},"end":{"line":46,"column":25}},"39":{"start":{"line":49,"column":8},"end":{"line":49,"column":21}},"40":{"start":{"line":52,"column":8},"end":{"line":52,"column":27}},"41":{"start":{"line":55,"column":8},"end":{"line":55,"column":37}},"42":{"start":{"line":58,"column":8},"end":{"line":58,"column":25}},"43":{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},"44":{"start":{"line":62,"column":12},"end":{"line":62,"column":29}},"45":{"start":{"line":65,"column":12},"end":{"line":65,"column":29}},"46":{"start":{"line":69,"column":8},"end":{"line":69,"column":23}},"47":{"start":{"line":72,"column":8},"end":{"line":72,"column":25}},"48":{"start":{"line":75,"column":8},"end":{"line":75,"column":25}},"49":{"start":{"line":78,"column":8},"end":{"line":78,"column":27}},"50":{"start":{"line":81,"column":8},"end":{"line":81,"column":25}},"51":{"start":{"line":84,"column":8},"end":{"line":84,"column":23}},"52":{"start":{"line":87,"column":8},"end":{"line":87,"column":26}},"53":{"start":{"line":90,"column":8},"end":{"line":90,"column":31}},"54":{"start":{"line":93,"column":8},"end":{"line":93,"column":25}},"55":{"start":{"line":96,"column":8},"end":{"line":96,"column":25}},"56":{"start":{"line":99,"column":8},"end":{"line":99,"column":24}},"57":{"start":{"line":102,"column":8},"end":{"line":102,"column":25}},"58":{"start":{"line":105,"column":8},"end":{"line":105,"column":25}},"59":{"start":{"line":108,"column":8},"end":{"line":108,"column":26}},"60":{"start":{"line":111,"column":0},"end":{"line":111,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":33},"end":{"line":32,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":57},"end":{"line":18,"column":76}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":35},"end":{"line":44,"column":5}},"line":33},"3":{"name":"(anonymous_3)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":19},"end":{"line":47,"column":5}},"line":45},"4":{"name":"(anonymous_4)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":15},"end":{"line":50,"column":5}},"line":48},"5":{"name":"(anonymous_5)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":21},"end":{"line":53,"column":5}},"line":51},"6":{"name":"(anonymous_6)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":31},"end":{"line":56,"column":5}},"line":54},"7":{"name":"(anonymous_7)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":19},"end":{"line":59,"column":5}},"line":57},"8":{"name":"(anonymous_8)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":32},"end":{"line":67,"column":5}},"line":60},"9":{"name":"(anonymous_9)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":17},"end":{"line":70,"column":5}},"line":68},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":19},"end":{"line":73,"column":5}},"line":71},"11":{"name":"(anonymous_11)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":19},"end":{"line":76,"column":5}},"line":74},"12":{"name":"(anonymous_12)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":21},"end":{"line":79,"column":5}},"line":77},"13":{"name":"(anonymous_13)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":15},"end":{"line":82,"column":5}},"line":80},"14":{"name":"(anonymous_14)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":13},"end":{"line":85,"column":5}},"line":83},"15":{"name":"(anonymous_15)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":16},"end":{"line":88,"column":5}},"line":86},"16":{"name":"(anonymous_16)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":21},"end":{"line":91,"column":5}},"line":89},"17":{"name":"(anonymous_17)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":15},"end":{"line":94,"column":5}},"line":92},"18":{"name":"(anonymous_18)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":15},"end":{"line":97,"column":5}},"line":95},"19":{"name":"(anonymous_19)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":14},"end":{"line":100,"column":5}},"line":98},"20":{"name":"(anonymous_20)","decl":{"start":{"line":101,"column":4},"end":{"line":101,"column":5}},"loc":{"start":{"line":101,"column":15},"end":{"line":103,"column":5}},"line":101},"21":{"name":"(anonymous_21)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":15},"end":{"line":106,"column":5}},"line":104},"22":{"name":"(anonymous_22)","decl":{"start":{"line":107,"column":4},"end":{"line":107,"column":5}},"loc":{"start":{"line":107,"column":16},"end":{"line":109,"column":5}},"line":107}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},{"start":{"line":19,"column":8},"end":{"line":21,"column":9}}],"line":19},"1":{"loc":{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},{"start":{"line":61,"column":8},"end":{"line":66,"column":9}}],"line":61},"2":{"loc":{"start":{"line":61,"column":12},"end":{"line":61,"column":74}},"type":"binary-expr","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":34}},{"start":{"line":61,"column":38},"end":{"line":61,"column":74}}],"line":61}},"s":{"0":1,"1":1,"2":9270274,"3":9270274,"4":9270274,"5":9270274,"6":9270274,"7":9270274,"8":9270274,"9":9270274,"10":9270274,"11":9270274,"12":159982,"13":159982,"14":159982,"15":1599809,"16":159982,"17":2,"18":159980,"19":159980,"20":159980,"21":159980,"22":159980,"23":159980,"24":159980,"25":159980,"26":159980,"27":159980,"28":9110292,"29":9110292,"30":9110292,"31":9110292,"32":9110292,"33":9110292,"34":9110292,"35":9110292,"36":9110292,"37":9110292,"38":9270272,"39":9270272,"40":9270272,"41":9270272,"42":9270272,"43":9270272,"44":58299,"45":9211973,"46":9270272,"47":9270272,"48":9270272,"49":9270272,"50":7707218,"51":130202,"52":712165,"53":194447,"54":2328219,"55":258975,"56":3639241,"57":517507,"58":582119,"59":452895,"60":1},"f":{"0":159982,"1":1599809,"2":9110292,"3":9270272,"4":9270272,"5":9270272,"6":9270272,"7":9270272,"8":9270272,"9":9270272,"10":9270272,"11":9270272,"12":9270272,"13":7707218,"14":130202,"15":712165,"16":194447,"17":2328219,"18":258975,"19":3639241,"20":517507,"21":582119,"22":452895},"b":{"0":[2,159980],"1":[58299,9211973],"2":[9270272,159980]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/SectionEntry.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/SectionEntry.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"./IInsightFacade\";\n\nexport default class SectionEntry {\n\tprivate uuid: string = \"\";\n\tprivate id: string = \"\";\n\tprivate title: string = \"\";\n\tprivate instructor: string = \"\";\n\tprivate dept: string = \"\";\n\tprivate year: number = -100;\n\tprivate avg: number = -100;\n\tprivate pass: number = -100;\n\tprivate fail: number = -100;\n\tprivate audit: number = -100;\n\n\tpublic sectionFromJSON(jsonSection: any) {\n\t\tlet keys = Object.keys(jsonSection);\n\t\tlet expectedKeys = [\"id\", \"Course\", \"Title\", \"Professor\", \"Subject\", \"Year\", \"Avg\", \"Pass\", \"Fail\", \"Audit\"];\n\t\tconst hasAllElems = expectedKeys.every((elem) => keys.includes(elem));\n\t\tif (!hasAllElems) {\n\t\t\tthrow new InsightError(\"Section could not be created\");\n\t\t}\n\t\tthis.set_uuid(jsonSection[\"id\"]);\n\t\tthis.set_id(jsonSection[\"Course\"]);\n\t\tthis.set_title(jsonSection[\"Title\"]);\n\t\tthis.set_instructor(jsonSection[\"Professor\"]);\n\t\tthis.set_dept(jsonSection[\"Subject\"]);\n\t\tthis.set_year(parseInt(jsonSection[\"Year\"], 10), jsonSection);\n\t\tthis.set_avg(jsonSection[\"Avg\"]);\n\t\tthis.set_pass(jsonSection[\"Pass\"]);\n\t\tthis.set_fail(jsonSection[\"Fail\"]);\n\t\tthis.set_audit(jsonSection[\"Audit\"]);\n\t}\n\n\tpublic sectionFromDisk(sectionObject: any) {\n\t\tthis.set_uuid(sectionObject[\"uuid\"]);\n\t\tthis.set_id(sectionObject[\"id\"]);\n\t\tthis.set_title(sectionObject[\"title\"]);\n\t\tthis.set_instructor(sectionObject[\"instructor\"]);\n\t\tthis.set_dept(sectionObject[\"dept\"]);\n\t\tthis.set_year(sectionObject[\"year\"], sectionObject);\n\t\tthis.set_avg(sectionObject[\"avg\"]);\n\t\tthis.set_pass(sectionObject[\"pass\"]);\n\t\tthis.set_fail(sectionObject[\"fail\"]);\n\t\tthis.set_audit(sectionObject[\"audit\"]);\n\t}\n\n\tpublic set_uuid(uuid: string) {\n\t\tthis.uuid = uuid;\n\t}\n\n\tpublic set_id(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tpublic set_title(title: string) {\n\t\tthis.title = title;\n\t}\n\n\tpublic set_instructor(instructor: string) {\n\t\tthis.instructor = instructor;\n\t}\n\n\tpublic set_dept(dept: string) {\n\t\tthis.dept = dept;\n\t}\n\n\tpublic set_year(year: number, jsonSection: any) {\n\t\tif (jsonSection[\"Section\"] && jsonSection[\"Section\"] === \"overall\") {\n\t\t\tthis.year = 1900;\n\t\t} else {\n\t\t\tthis.year = year;\n\t\t}\n\t}\n\n\tpublic set_avg(avg: number) {\n\t\tthis.avg = avg;\n\t}\n\n\tpublic set_pass(pass: number) {\n\t\tthis.pass = pass;\n\t}\n\n\tpublic set_fail(fail: number) {\n\t\tthis.fail = fail;\n\t}\n\n\tpublic set_audit(audit: number) {\n\t\tthis.audit = audit;\n\t}\n\n\tpublic get_uuid(): string {\n\t\treturn this.uuid;\n\t}\n\n\tpublic get_id(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic get_title(): string {\n\t\treturn this.title;\n\t}\n\n\tpublic get_instructor(): string {\n\t\treturn this.instructor;\n\t}\n\n\tpublic get_dept(): string {\n\t\treturn this.dept;\n\t}\n\n\tpublic get_year(): number {\n\t\treturn this.year;\n\t}\n\n\tpublic get_avg(): number {\n\t\treturn this.avg;\n\t}\n\n\tpublic get_pass(): number {\n\t\treturn this.pass;\n\t}\n\n\tpublic get_fail(): number {\n\t\treturn this.fail;\n\t}\n\n\tpublic get_audit(): number {\n\t\treturn this.audit;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c35535c25a137d32f3013153775f1e3e7dd28641","contentHash":"639ac4153487510073b03cdb89518bfe4397a6c02685b60930c54d48c2ca1786"},"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/DatasetManager.ts":{"path":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/DatasetManager.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":52}},"5":{"start":{"line":8,"column":19},"end":{"line":8,"column":55}},"6":{"start":{"line":9,"column":31},"end":{"line":9,"column":81}},"7":{"start":{"line":11,"column":0},"end":{"line":14,"column":54}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":29}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":35}},"10":{"start":{"line":16,"column":11},"end":{"line":16,"column":19}},"11":{"start":{"line":17,"column":17},"end":{"line":17,"column":50}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":45}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":44}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":33}},"15":{"start":{"line":26,"column":27},"end":{"line":26,"column":53}},"16":{"start":{"line":27,"column":8},"end":{"line":34,"column":9}},"17":{"start":{"line":28,"column":12},"end":{"line":28,"column":49}},"18":{"start":{"line":29,"column":12},"end":{"line":29,"column":51}},"19":{"start":{"line":30,"column":12},"end":{"line":30,"column":39}},"20":{"start":{"line":33,"column":12},"end":{"line":33,"column":103}},"21":{"start":{"line":37,"column":23},"end":{"line":37,"column":53}},"22":{"start":{"line":38,"column":8},"end":{"line":40,"column":11}},"23":{"start":{"line":39,"column":12},"end":{"line":39,"column":37}},"24":{"start":{"line":41,"column":8},"end":{"line":41,"column":30}},"25":{"start":{"line":42,"column":8},"end":{"line":42,"column":47}},"26":{"start":{"line":43,"column":8},"end":{"line":43,"column":33}},"27":{"start":{"line":46,"column":22},"end":{"line":46,"column":46}},"28":{"start":{"line":47,"column":8},"end":{"line":53,"column":9}},"29":{"start":{"line":48,"column":12},"end":{"line":48,"column":82}},"30":{"start":{"line":49,"column":12},"end":{"line":49,"column":37}},"31":{"start":{"line":52,"column":12},"end":{"line":52,"column":97}},"32":{"start":{"line":56,"column":8},"end":{"line":66,"column":9}},"33":{"start":{"line":57,"column":27},"end":{"line":57,"column":68}},"34":{"start":{"line":58,"column":28},"end":{"line":60,"column":17}},"35":{"start":{"line":59,"column":16},"end":{"line":59,"column":42}},"36":{"start":{"line":61,"column":12},"end":{"line":61,"column":71}},"37":{"start":{"line":62,"column":12},"end":{"line":62,"column":37}},"38":{"start":{"line":65,"column":12},"end":{"line":65,"column":97}},"39":{"start":{"line":69,"column":23},"end":{"line":69,"column":25}},"40":{"start":{"line":70,"column":8},"end":{"line":80,"column":9}},"41":{"start":{"line":71,"column":25},"end":{"line":71,"column":75}},"42":{"start":{"line":72,"column":29},"end":{"line":72,"column":45}},"43":{"start":{"line":73,"column":12},"end":{"line":75,"column":13}},"44":{"start":{"line":74,"column":16},"end":{"line":74,"column":43}},"45":{"start":{"line":76,"column":12},"end":{"line":76,"column":58}},"46":{"start":{"line":79,"column":12},"end":{"line":79,"column":58}},"47":{"start":{"line":81,"column":8},"end":{"line":81,"column":47}},"48":{"start":{"line":82,"column":8},"end":{"line":82,"column":33}},"49":{"start":{"line":85,"column":23},"end":{"line":85,"column":25}},"50":{"start":{"line":86,"column":8},"end":{"line":101,"column":9}},"51":{"start":{"line":87,"column":12},"end":{"line":97,"column":13}},"52":{"start":{"line":88,"column":37},"end":{"line":88,"column":87}},"53":{"start":{"line":89,"column":33},"end":{"line":89,"column":57}},"54":{"start":{"line":90,"column":16},"end":{"line":92,"column":17}},"55":{"start":{"line":91,"column":20},"end":{"line":91,"column":43}},"56":{"start":{"line":93,"column":16},"end":{"line":93,"column":49}},"57":{"start":{"line":96,"column":16},"end":{"line":96,"column":43}},"58":{"start":{"line":100,"column":12},"end":{"line":100,"column":39}},"59":{"start":{"line":104,"column":25},"end":{"line":104,"column":27}},"60":{"start":{"line":105,"column":8},"end":{"line":120,"column":9}},"61":{"start":{"line":106,"column":12},"end":{"line":116,"column":13}},"62":{"start":{"line":107,"column":37},"end":{"line":107,"column":87}},"63":{"start":{"line":108,"column":33},"end":{"line":108,"column":57}},"64":{"start":{"line":109,"column":16},"end":{"line":111,"column":17}},"65":{"start":{"line":110,"column":20},"end":{"line":110,"column":51}},"66":{"start":{"line":112,"column":16},"end":{"line":112,"column":51}},"67":{"start":{"line":115,"column":16},"end":{"line":115,"column":43}},"68":{"start":{"line":119,"column":12},"end":{"line":119,"column":39}},"69":{"start":{"line":123,"column":8},"end":{"line":138,"column":9}},"70":{"start":{"line":124,"column":27},"end":{"line":124,"column":68}},"71":{"start":{"line":125,"column":12},"end":{"line":127,"column":15}},"72":{"start":{"line":126,"column":16},"end":{"line":126,"column":54}},"73":{"start":{"line":128,"column":40},"end":{"line":128,"column":42}},"74":{"start":{"line":129,"column":12},"end":{"line":132,"column":13}},"75":{"start":{"line":130,"column":32},"end":{"line":130,"column":53}},"76":{"start":{"line":131,"column":16},"end":{"line":131,"column":52}},"77":{"start":{"line":133,"column":33},"end":{"line":133,"column":73}},"78":{"start":{"line":134,"column":12},"end":{"line":134,"column":51}},"79":{"start":{"line":137,"column":12},"end":{"line":137,"column":97}},"80":{"start":{"line":141,"column":29},"end":{"line":141,"column":92}},"81":{"start":{"line":142,"column":25},"end":{"line":142,"column":49}},"82":{"start":{"line":143,"column":22},"end":{"line":143,"column":58}},"83":{"start":{"line":144,"column":8},"end":{"line":144,"column":47}},"84":{"start":{"line":145,"column":8},"end":{"line":145,"column":40}},"85":{"start":{"line":148,"column":0},"end":{"line":148,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":1},"end":{"line":11,"column":2}},"loc":{"start":{"line":11,"column":22},"end":{"line":14,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":18},"end":{"line":19,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":31},"end":{"line":24,"column":5}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":28},"end":{"line":35,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":38},"end":{"line":44,"column":5}},"line":36},"6":{"name":"(anonymous_6)","decl":{"start":{"line":38,"column":35},"end":{"line":38,"column":36}},"loc":{"start":{"line":38,"column":54},"end":{"line":40,"column":9}},"line":38},"7":{"name":"(anonymous_7)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":38},"end":{"line":54,"column":5}},"line":45},"8":{"name":"(anonymous_8)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":36},"end":{"line":67,"column":5}},"line":55},"9":{"name":"(anonymous_9)","decl":{"start":{"line":58,"column":44},"end":{"line":58,"column":45}},"loc":{"start":{"line":58,"column":61},"end":{"line":60,"column":13}},"line":58},"10":{"name":"(anonymous_10)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":35},"end":{"line":83,"column":5}},"line":68},"11":{"name":"(anonymous_11)","decl":{"start":{"line":84,"column":4},"end":{"line":84,"column":5}},"loc":{"start":{"line":84,"column":30},"end":{"line":102,"column":5}},"line":84},"12":{"name":"(anonymous_12)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":26},"end":{"line":121,"column":5}},"line":103},"13":{"name":"(anonymous_13)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":41},"end":{"line":139,"column":5}},"line":122},"14":{"name":"(anonymous_14)","decl":{"start":{"line":125,"column":39},"end":{"line":125,"column":40}},"loc":{"start":{"line":125,"column":56},"end":{"line":127,"column":13}},"line":125},"15":{"name":"(anonymous_15)","decl":{"start":{"line":140,"column":4},"end":{"line":140,"column":5}},"loc":{"start":{"line":140,"column":34},"end":{"line":146,"column":5}},"line":140}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":14,"column":3},"end":{"line":14,"column":52}},"type":"binary-expr","locations":[{"start":{"line":14,"column":3},"end":{"line":14,"column":12}},{"start":{"line":14,"column":17},"end":{"line":14,"column":51}}],"line":14},"4":{"loc":{"start":{"line":27,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":34,"column":9}},{"start":{"line":27,"column":8},"end":{"line":34,"column":9}}],"line":27},"5":{"loc":{"start":{"line":86,"column":8},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":101,"column":9}},{"start":{"line":86,"column":8},"end":{"line":101,"column":9}}],"line":86},"6":{"loc":{"start":{"line":105,"column":8},"end":{"line":120,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":120,"column":9}},{"start":{"line":105,"column":8},"end":{"line":120,"column":9}}],"line":105}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":33,"11":33,"12":23,"13":23,"14":23,"15":6,"16":6,"17":5,"18":5,"19":5,"20":1,"21":5,"22":5,"23":9,"24":5,"25":5,"26":5,"27":28,"28":28,"29":28,"30":28,"31":0,"32":5,"33":5,"34":5,"35":14,"36":5,"37":5,"38":0,"39":23,"40":23,"41":23,"42":8,"43":8,"44":8,"45":8,"46":15,"47":23,"48":23,"49":20,"50":20,"51":19,"52":19,"53":19,"54":19,"55":27,"56":19,"57":0,"58":1,"59":64,"60":64,"61":36,"62":36,"63":36,"64":36,"65":48,"66":36,"67":0,"68":28,"69":141,"70":141,"71":141,"72":282,"73":141,"74":141,"75":141,"76":141,"77":141,"78":141,"79":0,"80":141,"81":141,"82":141,"83":141,"84":141,"85":1},"f":{"0":2,"1":1,"2":33,"3":23,"4":6,"5":5,"6":9,"7":28,"8":5,"9":14,"10":23,"11":20,"12":64,"13":141,"14":282,"15":141},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2],"3":[1,1],"4":[5,1],"5":[19,1],"6":[36,28]},"inputSourceMap":{"version":3,"file":"/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/DatasetManager.ts","sources":["/Users/dhairyads/Desktop/Main/CPSC 310/project_team216/src/controller/DatasetManager.ts"],"names":[],"mappings":"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","sourcesContent":["import {DatasetEntry} from \"./DatasetEntry\";\nimport {InsightDataset, InsightDatasetKind, InsightError, NotFoundError} from \"./IInsightFacade\";\nimport fs from \"fs-extra\";\nimport SectionsDatasetEntry from \"./SectionsDatasetEntry\";\n\n\nexport enum Operation {\n\tAdd = \"add\",\n\tRemove = \"remove\"\n}\n\nexport default class DatasetManager {\n\tprivate path = \"./data\";\n\tprivate ledgerPath = this.path + \"/datasetLedger.json\";\n\n\tconstructor() {\n\t\t/*\n\t\tLoad dataset ledger from disk.\n\t\t */\n\t\t// TODO: Load dataset ledger from disk.\n\t}\n\n\tpublic async saveDataset(dataset: DatasetEntry) {\n\t\t/*\n\t\tSave dataset onto disk, and also into ledger.\n\t\t */\n\t\tawait dataset.saveDataset(this.path);\n\t\tawait this.addDatasetEntry(dataset);\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic async removeDataset(id: string) {\n\t\t/*\n\t\tRemove dataset from saved datasets.\n\t\t */\n\t\tconst datasetIds = await this.getDatasetIds();\n\t\tif (datasetIds.includes(id)) {\n\t\t\tawait this.removeDatasetFromDisk(id);\n\t\t\tawait this.removeDatasetFromLedger(id);\n\t\t\treturn Promise.resolve(id);\n\t\t} else {\n\t\t\treturn Promise.reject(new NotFoundError(\"Cannot remove nonexistent ID.\"));\n\t\t}\n\t}\n\n\tprivate async removeDatasetFromLedger(id: string) {\n\t\t/*\n\t\tRemoves dataset from on ledger storage.\n\t\t */\n\t\tlet datasets = await this.readDatasetLedger();\n\t\tdatasets = datasets.filter(function (dataset: any): boolean {\n\t\t\treturn dataset.id !== id;\n\t\t});\n\t\tconsole.log(datasets);\n\t\tawait this.saveDatasetLedger(datasets);\n\t\treturn Promise.resolve();\n\t}\n\n\tprivate async saveDatasetLedger(datasets: any[]) {\n\t\tlet content = JSON.stringify(datasets);\n\t\ttry {\n\t\t\tawait fs.writeJSON(this.ledgerPath, content, \"utf-8\");\n\t\t\treturn Promise.resolve();\n\t\t} catch(err) {\n\t\t\treturn Promise.reject(new InsightError(\"Could not write to file.\"));\n\t\t}\n\t}\n\n\tprivate async removeDatasetFromDisk(id: string) {\n\t\t/*\n\t\tRemoves dataset from on disk storage.\n\t\t */\n\t\ttry {\n\t\t\tlet dirFiles = fs.readdirSync(this.path);\n\t\t\tlet removeDir = dirFiles.filter(function(value) {\n\t\t\t\treturn value.includes(id);\n\t\t\t})[0];\n\t\t\tfs.removeSync(this.path + \"/\" + removeDir);\n\t\t\treturn Promise.resolve();\n\t\t} catch {\n\t\t\treturn Promise.reject(new NotFoundError(\"File in disk not found.\"));\n\t\t}\n\t}\n\n\tprivate async addDatasetEntry(dataset: DatasetEntry) {\n\n\t\tlet datasets: any[] = [];\n\n\t\ttry {\n\t\t\tconst file = await fs.readJSON(this.ledgerPath);\n\t\t\tlet ledgerJSON = JSON.parse(file);\n\t\t\tfor (const ledgerEntry of ledgerJSON) {\n\t\t\t\tdatasets.push(ledgerEntry);\n\t\t\t}\n\t\t\tdatasets.push(dataset.createInsightDataset());\n\t\t} catch {\n\t\t\tdatasets.push(dataset.createInsightDataset());\n\t\t}\n\t\tawait this.saveDatasetLedger(datasets);\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic async readDatasetLedger(): Promise<InsightDataset[]> {\n\t\tlet datasets: any[] = [];\n\t\tif (fs.existsSync(this.ledgerPath)) {\n\t\t\ttry {\n\t\t\t\tconst fileContents = await fs.readJSON(this.ledgerPath);\n\t\t\t\tlet ledgerJSON = JSON.parse(fileContents);\n\t\t\t\tfor (const dataset of ledgerJSON) {\n\t\t\t\t\tdatasets.push(dataset);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(datasets);\n\t\t\t} catch {\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\t}\n\n\tpublic async getDatasetIds(): Promise<string[]>{\n\n\t\tlet datasetIds: any[] = [];\n\t\tif (fs.existsSync(this.ledgerPath)) {\n\t\t\ttry {\n\t\t\t\tconst fileContents = await fs.readJSON(this.ledgerPath);\n\t\t\t\tlet ledgerJSON = JSON.parse(fileContents);\n\t\t\t\tfor (const dataset of ledgerJSON) {\n\t\t\t\t\tdatasetIds.push(dataset[\"id\"]);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(datasetIds);\n\t\t\t} catch {\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\t}\n\n\tpublic async loadSectionsDatasetsFromDisk(): Promise<SectionsDatasetEntry[]> {\n\t\t// return Promise.reject(\"Could not load datasets from disk.\");\n\t\ttry {\n\t\t\tlet dirFiles = fs.readdirSync(this.path);\n\t\t\tdirFiles = dirFiles.filter(function(value) {\n\t\t\t\treturn value !== \"datasetLedger.json\";\n\t\t\t});\n\n\t\t\tlet loadedDatasetPromises: Array<Promise<SectionsDatasetEntry>> = [];\n\n\t\t\tfor (const dir of dirFiles) {\n\t\t\t\tconst dataset = this.loadDataset(dir);\n\t\t\t\tloadedDatasetPromises.push(dataset);\n\t\t\t}\n\n\t\t\tlet datasetEntries = await Promise.all(loadedDatasetPromises);\n\t\t\treturn Promise.resolve(datasetEntries);\n\n\t\t} catch {\n\t\t\treturn Promise.reject(new InsightError(\"Could not load datasets.\"));\n\t\t}\n\t}\n\n\tpublic async loadDataset(datasetDir: string): Promise<SectionsDatasetEntry> {\n\t\t// let dataset = new SectionsDatasetEntry();\n\t\tconst fileContents = await fs.readJSON(this.path + \"/\" + datasetDir);\n\t\tlet objectJSON = JSON.parse(fileContents);\n\t\tlet dataset = new SectionsDatasetEntry();\n\t\tdataset.JSONToDatasetEntry(objectJSON);\n\t\treturn Promise.resolve(dataset);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e592e6037c656ca68c0d1e0a74c01d065d47a8bd","contentHash":"b84d44ce44bf57956093ad57879ae2cc8c902c2b7eeb14b778f653f817b408c5"}}